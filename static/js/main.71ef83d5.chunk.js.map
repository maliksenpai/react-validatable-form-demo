{"version":3,"sources":["components/BodyWrapper.js","components/NavSidebar.js","components/ExampleUsageWrapper.js","components/ValidationResult.js","constants/Data.js","components/CurrentRulesInfo.js","components/examples/ExamplePureUsage.js","components/FormSubmitResult.js","components/examples/ExampleMuiUsage.js","components/Homepage.js","components/rules/RuleRequired.js","constants/Constants.js","components/rules/RuleNumber.js","components/rules/RuleLength.js","components/rules/RuleListSize.js","components/rules/RuleDate.js","components/rules/RuleEmail.js","components/rules/RuleUrl.js","components/rules/RuleIban.js","components/rules/RuleCustomOnHook.js","components/rules/RuleCustomOnProvider.js","components/advanced/AdvancedHideBeforeSubmit.js","components/advanced/AdvancedShowAfterBlur.js","components/advanced/AdvancedFocusToErrorAfterSubmit.js","components/customizations/CustomMessage.js","components/customizations/CustomTranslations.js","components/advanced/AdvancedSubComponent.js","components/advanced/AdvancedValidateComplexForms.js","components/advanced/AdvancedValidateLists.js","components/customizations/CustomConditionalRules.js","components/rules/RuleRegex.js","components/advanced/AdvancedFocusToErrorOnListAfterSubmit.js","components/advanced/AdvancedValidateListOfObjects.js","components/getting-started/Installation.js","components/getting-started/Usage.js","components/customizations/CustomApplyToNulls.js","components/customizations/CustomElementFocusHandler.js","components/rules/RuleUnique.js","components/rules/RuleEquality.js","components/examples/ExamplePrimeReact.js","components/examples/ExampleReactBootstrap.js","components/ApiInfo.js","components/CodeAccordion.js","components/api/ApiUseValidatableForm.js","components/api/ApiReactValidatableFormProvider.js","components/api/ApiRules.js","components/api/ApiRule.js","components/Settings.js","components/api/ApiPath.js","components/Routes.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["BodyWrapper","children","className","allMenuItems","title","itemId","subNav","NavSidebar","menuIsHidden","onMenuItemSelect","history","useHistory","location","useLocation","useState","searchInput","setSearchInput","firstPathname","setFirstPathname","useEffect","pathname","onItemSelect","includes","push","filteredMenuItems","JSON","parse","stringify","filter","m","result","searchInputUpper","toUpperCase","length","subsList","i","subEl","replaceAll","navigations","map","fm","itemWithSubItems","activeItemId","onSelect","items","menuStatus","onClick","TextField","label","InputProps","endAdornment","InputAdornment","position","Search","value","onChange","e","target","ExampleUsageWrapper","props","urlsJsx","codeUrl","urls","Array","isArray","url","pageCodeUrl","href","rel","wrapperClassName","header","ValidationResult","isValid","imgSrc","process","validationResultText","src","alt","options","stringifyWithFunction","obj","placeholder","fns","json","key","RegExp","source","replace","shift","CurrentRulesInfo","currentRules","Accordion","AccordionSummary","expandIcon","id","AccordionDetails","rules","path","ruleSet","rule","ExamplePureUsage","useValidatableForm","hideBeforeSubmit","showAfterBlur","focusToErrorAfterSubmit","validationError","formData","setPathValue","setFormIsSubmitted","setPathIsBlurred","get","htmlFor","type","onBlur","op","alert","FormSubmitResult","ExampleMuiUsage","dialogOpen","setDialogOpen","error","helperText","Autocomplete","multiple","event","newValue","renderInput","params","Button","variant","Dialog","open","onClose","DialogTitle","Homepage","to","initialFormData","RuleRequired","ruleOptions","numberRule","dependantPaths","val","ruleOption","comparisonValue","RuleNumber","setRules","setCurrentRules","setRuleOption","isFunc","setIsFunc","onlyIntegers","setOnlyIntegers","updateRules","funcParam","ruleParam","onlyIntegersParam","newRules","newRuleSet","newRule","splice","handleRuleOptionChange","disableClearable","disabled","FormGroup","FormControlLabel","control","Checkbox","checked","lengthRule","RuleLength","listSizeRule","slice","RuleListSize","today","Date","defaultComparisonValue","yesterday","setDate","getDate","dateRule","RuleDate","DesktopDatePicker","inputFormat","style","width","RuleEmail","RuleUrl","RuleIban","ruleParams","RuleCustomOnHook","RuleCustomOnProvider","textVal1","textVal2","val3","textVal4","checkVal","greaterThanOrEqualTo","equalTo","AdvancedHideBeforeSubmit","resetForm","AdvancedShowAfterBlur","AdvancedFocusToErrorAfterSubmit","val1","val2","greaterThan","customMessage","errorParams","CustomMessage","CustomTranslations","AdvancedSubComponent","disableSubkey2","index","disableAllSubkey2Rule","listChild","disableSubkey2Rule","listPath","subRules","disableIf","elementId","applyToNulls","AdvancedValidateComplexForms","nextId","setNextId","listChildJsx","lc","newListChild","el","handleDeleteElement","handleAddElement","marginLeft","AdvancedValidateLists","ind","enableIf","CustomConditionalRules","regex","RuleRegex","AdvancedFocusToErrorOnListAfterSubmit","AdvancedValidateListOfObjects","Installation","Usage","CustomApplyToNulls","myCustomElementFocusHandler","element","document","getElementById","grantParentElement","parentElement","classList","add","focus","setTimeout","remove","console","warn","CustomElementFocusHandler","elementFocusHandler","RuleUnique","listOfObjectsChild","subkey1","listOfObjectsChildJsx","newListOfObjectsChild","handleDeleteObjectElement","handleAddObjectElement","RuleEquality","FormControl","FormHelperText","primeReactElementsFocusHandler","tagName","inputNodes","getElementsByTagName","ExamplePrimeReact","filterVal","setFilterVal","filteredOptions","o","suggestions","completeMethod","ev","query","visible","modal","onHide","onMaskClick","draggable","resizable","ExampleReactBootstrap","Form","Group","controlId","Label","Control","isInvalid","Feedback","Select","ApiInfo","apiInfoListJsx","apiInfoList","api","apiLabel","apiDesc","desc","apiIndent","indent","leftIndentStyle","paddingLeft","borderTop","CodeAccordion","code","hookParametersApiInfoList","returnValuesApiInfoList","ApiUseValidatableForm","providerParametersApiInfoList","ApiReactValidatableFormProvider","openSettingsDialog","rulesParametersApiInfoList","ApiRules","ruleParametersApiInfoList","ApiRule","Settings","versionInfo","ApiPath","Routes","onOutsideClick","exact","customRules","myCustomRule","defaultSettings","lang","translationsEnabled","customElementFocusHandlerEnabled","customTranslations","en","required","de","defaultLangOptions","Main","isMobile","useMediaQuery","currentSettings","setCurrentSettings","settingsDialogOpen","setSettingsDialogOpen","setMenuIsHidden","handleSettingChange","newSettings","translations","currentLangOptions","customElementFocusHandler","log","dialogContent","IconButton","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","LocalizationProvider","dateAdapter","AdapterDateFns"],"mappings":"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","file":"static/js/main.71ef83d5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst BodyWrapper = ({ children }) => {\r\n    return (\r\n        <div className=\"relative min-h-screen\">\r\n            <main className=\"w-full min-h-screen\">{children}</main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BodyWrapper;\r\n","import { Navigation } from 'react-minimal-side-navigation';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport 'react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css';\r\nimport { InputAdornment, TextField } from '@mui/material';\r\nimport { Search } from '@mui/icons-material';\r\n\r\nconst allMenuItems = [\r\n    {\r\n        title: 'Getting Started',\r\n        itemId: 'group1',\r\n        subNav: [\r\n            {\r\n                title: 'Installation',\r\n                itemId: '/getting-started/installation',\r\n            },\r\n            {\r\n                title: 'Usage',\r\n                itemId: '/getting-started/usage',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        title: 'Rules',\r\n        itemId: 'group2',\r\n        subNav: [\r\n            {\r\n                title: 'required',\r\n                itemId: '/rules/required',\r\n            },\r\n            {\r\n                title: 'number',\r\n                itemId: '/rules/number',\r\n            },\r\n            {\r\n                title: 'length',\r\n                itemId: '/rules/length',\r\n            },\r\n            {\r\n                title: 'listSize',\r\n                itemId: '/rules/list-size',\r\n            },\r\n            {\r\n                title: 'date',\r\n                itemId: '/rules/date',\r\n            },\r\n            {\r\n                title: 'email',\r\n                itemId: '/rules/email',\r\n            },\r\n            {\r\n                title: 'url',\r\n                itemId: '/rules/url',\r\n            },\r\n            {\r\n                title: 'iban',\r\n                itemId: '/rules/iban',\r\n            },\r\n            {\r\n                title: 'equality',\r\n                itemId: '/rules/equality',\r\n            },\r\n            {\r\n                title: 'regex',\r\n                itemId: '/rules/regex',\r\n            },\r\n            {\r\n                title: 'unique',\r\n                itemId: '/rules/unique',\r\n            },\r\n            {\r\n                title: 'custom on hook',\r\n                itemId: '/rules/custom-on-hook',\r\n            },\r\n            {\r\n                title: 'custom on provider',\r\n                itemId: '/rules/custom-on-provider',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        title: 'Advanced Settings',\r\n        itemId: 'group4',\r\n        subNav: [\r\n            {\r\n                title: 'Validate Lists',\r\n                itemId: '/advanced/validate-lists',\r\n            },\r\n            {\r\n                title: 'Hide Before Submit',\r\n                itemId: '/advanced/hide-before-submit',\r\n            },\r\n            {\r\n                title: 'Show After Blur',\r\n                itemId: '/advanced/show-after-blur',\r\n            },\r\n            {\r\n                title: 'Focus to Error After Submit',\r\n                itemId: '/advanced/focus-to-error-after-submit',\r\n            },\r\n            {\r\n                title: 'Focus to Error on List After Submit',\r\n                itemId: '/advanced/focus-to-error-on-list-after-submit',\r\n            },\r\n            {\r\n                title: 'Validate List of Objects',\r\n                itemId: '/advanced/validate-list-of-objects',\r\n            },\r\n            {\r\n                title: 'Validate Complex Forms',\r\n                itemId: '/advanced/validate-complex-forms',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        title: 'Customizations',\r\n        itemId: 'group3',\r\n        subNav: [\r\n            {\r\n                title: 'Custom Message',\r\n                itemId: '/customizations/custom-message',\r\n            },\r\n            {\r\n                title: 'Custom Translations',\r\n                itemId: '/customizations/translations',\r\n            },\r\n            {\r\n                title: 'Conditional Rules',\r\n                itemId: '/customizations/conditional-rules',\r\n            },\r\n            {\r\n                title: 'Apply to Nulls',\r\n                itemId: '/customizations/apply-to-nulls',\r\n            },\r\n            {\r\n                title: 'Element Focus Handler',\r\n                itemId: '/customizations/custom-element-focus-handler',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        title: 'Example Usages',\r\n        itemId: 'group5',\r\n        subNav: [\r\n            {\r\n                title: 'Pure React Components',\r\n                itemId: '/examples/pure',\r\n            },\r\n            {\r\n                title: 'MUI Components',\r\n                itemId: '/examples/mui',\r\n            },\r\n            {\r\n                title: 'PrimeReact Components',\r\n                itemId: '/examples/prime-react',\r\n            },\r\n            {\r\n                title: 'React-Bootstrap Components',\r\n                itemId: '/examples/react-bootstrap',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        title: 'API',\r\n        itemId: 'group6',\r\n        subNav: [\r\n            {\r\n                title: 'ReactValidatableFormProvider',\r\n                itemId: '/api/react-validatable-form-provider',\r\n            },\r\n            {\r\n                title: 'useValidatableForm',\r\n                itemId: '/api/use-validatable-form',\r\n            },\r\n            {\r\n                title: 'rules',\r\n                itemId: '/api/rules',\r\n            },\r\n            {\r\n                title: 'Rule',\r\n                itemId: '/api/rule',\r\n            },\r\n            {\r\n                title: 'path & listPath',\r\n                itemId: '/api/path',\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\nexport const NavSidebar = ({ menuIsHidden, onMenuItemSelect }) => {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const [searchInput, setSearchInput] = useState('');\r\n    const [firstPathname, setFirstPathname] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setSearchInput('');\r\n        if (location.pathname === '/') {\r\n            setFirstPathname('/getting-started/installation');\r\n        } else {\r\n            setFirstPathname(location.pathname);\r\n        }\r\n    }, [location]);\r\n\r\n    const onNameClick = () => {\r\n        history.push('/');\r\n        onMenuItemSelect();\r\n    };\r\n\r\n    const onItemSelect = ({ itemId }) => {\r\n        if (itemId.includes('/') && location.pathname !== itemId) {\r\n            history.push(itemId);\r\n            onMenuItemSelect();\r\n        }\r\n    };\r\n\r\n    let filteredMenuItems = JSON.parse(JSON.stringify(allMenuItems));\r\n    if (searchInput) {\r\n        filteredMenuItems = filteredMenuItems.filter((m) => {\r\n            let result = false;\r\n            let searchInputUpper = searchInput.toUpperCase();\r\n            if (m.subNav && m.subNav.length > 0) {\r\n                let subsList = [];\r\n                for (let i = 0; i < m.subNav.length; i++) {\r\n                    const subEl = m.subNav[i];\r\n                    if (\r\n                        subEl.title.toUpperCase().includes(searchInputUpper) ||\r\n                        subEl.title.replaceAll(/\\s/g, '').toUpperCase().includes(searchInputUpper)\r\n                    ) {\r\n                        subsList.push(subEl);\r\n                        result = true;\r\n                    }\r\n                }\r\n                if (subsList && subsList.length > 0) {\r\n                    m.subNav = subsList;\r\n                }\r\n            }\r\n            return result;\r\n        });\r\n    }\r\n\r\n    const navigations = filteredMenuItems.map((fm) => {\r\n        const itemWithSubItems = filteredMenuItems.filter((m) => m.itemId === fm.itemId);\r\n        let activeItemId = firstPathname;\r\n        if (searchInput) {\r\n            activeItemId = itemWithSubItems[0].itemId;\r\n        }\r\n        return (\r\n            <Navigation key={fm.itemId} activeItemId={activeItemId} onSelect={onItemSelect} items={itemWithSubItems} />\r\n        );\r\n    });\r\n\r\n    const menuStatus = menuIsHidden ? 'sideMenuHidden' : 'sideMenuOpen';\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className={`${menuStatus} mysidemenu fixed inset-y-0 left-0 z-30 w-64 overflow-y-auto transition duration-300 ease-out transform translate-x-0 bg-white border-r-2 lg:translate-x-0 lg:static lg:inset-0 ${'ease-out translate-x-0'}`}\r\n            >\r\n                <div className=\"flex items-center justify-center text-center py-6\">\r\n                    <span className=\"mx-2 text-xl font-semibold text-black libraryName\" onClick={onNameClick}>\r\n                        react-validatable-form\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-center text-center\">\r\n                    <TextField\r\n                        className=\"menu-search-input\"\r\n                        label=\"search\"\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <Search />\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                        value={searchInput}\r\n                        onChange={(e) => setSearchInput(e.target.value)}\r\n                    />\r\n                </div>\r\n                {navigations}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import './ExampleUsageWrapper.css';\r\n\r\nconst CODE_BASE_URL = 'https://github.com/obss/react-validatable-form-demo/blob/master/src/';\r\n\r\nconst ExampleUsageWrapper = (props) => {\r\n    let urlsJsx = null;\r\n\r\n    if (props.codeUrl) {\r\n        let urls = [];\r\n        if (Array.isArray(props.codeUrl)) {\r\n            urls = [...props.codeUrl];\r\n        } else {\r\n            urls.push(props.codeUrl);\r\n        }\r\n        urlsJsx = urls.map((url) => {\r\n            const pageCodeUrl = CODE_BASE_URL + url;\r\n            return (\r\n                <span key={url} className=\"pageCodeUrlSpan\">\r\n                    <a href={pageCodeUrl} target=\"_blank\" rel=\"noreferrer\">\r\n                        View on GitHub\r\n                    </a>\r\n                </span>\r\n            );\r\n        });\r\n    }\r\n\r\n    const wrapperClassName = props.wrapperClassName || 'examplesUsageWrapperDiv';\r\n\r\n    return (\r\n        <div className={wrapperClassName}>\r\n            <span className=\"pageTitle\">{props.header}</span>\r\n            {urlsJsx}\r\n            <div className=\"mainWrapperDiv\">{props.children}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExampleUsageWrapper;\r\n","import './ValidationResult.css';\r\n\r\nconst ValidationResult = ({ isValid }) => {\r\n    let imgSrc = process.env.PUBLIC_URL + '/';\r\n    let validationResultText = '';\r\n    if (isValid) {\r\n        imgSrc += 'valid.png';\r\n        validationResultText = 'valid';\r\n    } else {\r\n        imgSrc += 'invalid.png';\r\n        validationResultText = 'invalid';\r\n    }\r\n\r\n    return (\r\n        <div className={'validationResultDiv'}>\r\n            <span>Validation Result: </span>\r\n            <img src={imgSrc} alt=\"validationresult\" className={'validationResultIcon'} />\r\n            <span className={isValid ? 'validationResultInfoSuccess' : 'validationResultInfoFail'}>\r\n                {validationResultText}\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ValidationResult;\r\n","export const options = ['Asia', 'Europe', 'North America', 'South America', 'Africa', 'Australia', 'Antarctica'];\r\n","import './CurrentRulesInfo.css';\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\nconst stringifyWithFunction = (obj) => {\r\n    var placeholder = '____PLACEHOLDER____';\r\n    var fns = [];\r\n    var json = JSON.stringify(\r\n        obj,\r\n        function (key, value) {\r\n            if (typeof value === 'function') {\r\n                fns.push(value);\r\n                return placeholder;\r\n            }\r\n            if (value instanceof RegExp) {\r\n                fns.push('/' + value.source + '/');\r\n                return placeholder;\r\n            }\r\n            return value;\r\n        },\r\n        2\r\n    );\r\n    json = json.replace(new RegExp('\"' + placeholder + '\"', 'g'), function () {\r\n        return fns.shift();\r\n    });\r\n    return json;\r\n};\r\n\r\nconst CurrentRulesInfo = ({ currentRules }) => {\r\n    return (\r\n        <div className={'currentRuleInfoDiv'}>\r\n            <Accordion>\r\n                <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\r\n                    <span className={'currentRuleLabel'}>Current Rules</span>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <span className={'currentRuleString'}>{stringifyWithFunction(currentRules)}</span>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CurrentRulesInfo;\r\n","import { useValidatableForm } from 'react-validatable-form';\r\nimport get from 'lodash.get';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport ValidationResult from '../ValidationResult';\r\nimport { options } from '../../constants/Data';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\n\r\nconst rules = [\r\n    { path: 'textVal1', ruleSet: [{ rule: 'required' }] },\r\n    { path: 'textVal2', ruleSet: [{ rule: 'required' }] },\r\n    { path: 'numVal', ruleSet: [{ rule: 'required' }] },\r\n    { path: 'selectVal', ruleSet: [{ rule: 'required' }] },\r\n];\r\n\r\nconst ExamplePureUsage = () => {\r\n    const [\r\n        isValid,\r\n        validationError,\r\n        formData,\r\n        { setPathValue, setFormIsSubmitted, setPathIsBlurred },\r\n    ] = useValidatableForm({\r\n        rules,\r\n        hideBeforeSubmit: true,\r\n        showAfterBlur: true,\r\n        focusToErrorAfterSubmit: true,\r\n    });\r\n\r\n    const handleFormSubmit = () => {\r\n        const submitResultValid = setFormIsSubmitted();\r\n        if (submitResultValid) {\r\n            alert(JSON.stringify(formData));\r\n        }\r\n    };\r\n    return (\r\n        <ExampleUsageWrapper\r\n            header=\"Example Usage with Pure React Components\"\r\n            codeUrl=\"components/examples/ExamplePureUsage.js\"\r\n        >\r\n            <div>\r\n                <div className={get(validationError, 'textVal1') && 'hasError'}>\r\n                    <label htmlFor=\"textVal1\">Text1: </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={get(formData, 'textVal1') || ''}\r\n                        onChange={(e) => setPathValue('textVal1', e.target.value)}\r\n                        onBlur={() => setPathIsBlurred('textVal1')}\r\n                        id=\"textVal1\"\r\n                    />\r\n                    <div className=\"errorText\">{get(validationError, 'textVal1') || ' '}</div>\r\n                </div>\r\n                <div className={get(validationError, 'textVal2') && 'hasError'}>\r\n                    <label htmlFor=\"textVal2\">Text2: </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={get(formData, 'textVal2') || ''}\r\n                        onChange={(e) => setPathValue('textVal2', e.target.value)}\r\n                        onBlur={() => setPathIsBlurred('textVal2')}\r\n                        id=\"textVal2\"\r\n                    />\r\n                    <div className=\"errorText\">{get(validationError, 'textVal2') || ' '}</div>\r\n                </div>\r\n                <div className={get(validationError, 'numVal') && 'hasError'}>\r\n                    <label htmlFor=\"numVal\">Num Val: </label>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={get(formData, 'numVal') || ''}\r\n                        onChange={(e) => setPathValue('numVal', e.target.value)}\r\n                        onBlur={() => setPathIsBlurred('numVal')}\r\n                        id=\"numVal\"\r\n                    />\r\n                    <div className=\"errorText\">{get(validationError, 'numVal') || ' '}</div>\r\n                </div>\r\n                <div className={get(validationError, 'selectVal') && 'hasError'}>\r\n                    <label htmlFor=\"selectVal\">Select Val: </label>\r\n                    <select\r\n                        id=\"selectVal\"\r\n                        onBlur={() => setPathIsBlurred('selectVal')}\r\n                        value={get(formData, 'selectVal') || ''}\r\n                        onChange={(e) => setPathValue('selectVal', e.target.value)}\r\n                    >\r\n                        <option key={'empty'} value={''}>\r\n                            {''}\r\n                        </option>\r\n                        {options.map((op) => {\r\n                            return (\r\n                                <option key={op} value={op}>\r\n                                    {op}\r\n                                </option>\r\n                            );\r\n                        })}\r\n                    </select>\r\n                    <div className=\"errorText\">{get(validationError, 'selectVal') || ' '}</div>\r\n                </div>\r\n                <div>\r\n                    <button className=\"mySubmitButton pureButton\" onClick={() => handleFormSubmit()}>\r\n                        Submit Form\r\n                    </button>\r\n                </div>\r\n                <ValidationResult isValid={isValid} />\r\n                <CurrentRulesInfo currentRules={rules} />\r\n            </div>\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default ExamplePureUsage;\r\n","import './FormSubmitResult.css';\r\n\r\nconst stringifyWithFunction = (obj) => {\r\n    var placeholder = '____PLACEHOLDER____';\r\n    var fns = [];\r\n    var json = JSON.stringify(\r\n        obj,\r\n        function (key, value) {\r\n            if (typeof value === 'function') {\r\n                fns.push(value);\r\n                return placeholder;\r\n            }\r\n            return value;\r\n        },\r\n        2\r\n    );\r\n    json = json.replace(new RegExp('\"' + placeholder + '\"', 'g'), function () {\r\n        return fns.shift();\r\n    });\r\n    return json;\r\n};\r\n\r\nconst FormSubmitResult = ({ formData }) => {\r\n    return (\r\n        <div>\r\n            <span className={'formDataString'}>{stringifyWithFunction(formData)}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormSubmitResult;\r\n","import { useState } from 'react';\r\nimport { useValidatableForm } from 'react-validatable-form';\r\nimport get from 'lodash.get';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport TextField from '@mui/material/TextField';\r\nimport ValidationResult from '../ValidationResult';\r\nimport { Autocomplete, Button } from '@mui/material';\r\nimport { Dialog, DialogTitle } from '@mui/material';\r\nimport FormSubmitResult from '../FormSubmitResult';\r\nimport { options } from '../../constants/Data';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\n\r\nconst rules = [\r\n    { path: 'textVal1', ruleSet: [{ rule: 'required' }] },\r\n    { path: 'textVal2', ruleSet: [{ rule: 'required' }] },\r\n    { path: 'numVal', ruleSet: [{ rule: 'required' }] },\r\n    { path: 'selectVal', ruleSet: [{ rule: 'required' }] },\r\n];\r\n\r\nconst ExampleMuiUsage = () => {\r\n    const [\r\n        isValid,\r\n        validationError,\r\n        formData,\r\n        { setPathValue, setFormIsSubmitted, setPathIsBlurred },\r\n    ] = useValidatableForm({\r\n        rules,\r\n        hideBeforeSubmit: true,\r\n        showAfterBlur: true,\r\n        focusToErrorAfterSubmit: true,\r\n    });\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n    const handleFormSubmit = () => {\r\n        const submitResultValid = setFormIsSubmitted();\r\n        if (submitResultValid) {\r\n            setDialogOpen(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ExampleUsageWrapper\r\n            header=\"Example Usage with MUI Components\"\r\n            codeUrl=\"components/examples/ExampleMuiUsage.js\"\r\n        >\r\n            <div>\r\n                <div>\r\n                    <TextField\r\n                        error={!!get(validationError, 'textVal1')}\r\n                        helperText={get(validationError, 'textVal1') || ' '}\r\n                        label=\"Text1\"\r\n                        type=\"text\"\r\n                        value={get(formData, 'textVal1') || ''}\r\n                        onChange={(e) => setPathValue('textVal1', e.target.value)}\r\n                        onBlur={() => setPathIsBlurred('textVal1')}\r\n                        id=\"textVal1\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <TextField\r\n                        error={!!get(validationError, 'textVal2')}\r\n                        helperText={get(validationError, 'textVal2') || ' '}\r\n                        label=\"Text2\"\r\n                        type=\"text\"\r\n                        value={get(formData, 'textVal2') || ''}\r\n                        onChange={(e) => setPathValue('textVal2', e.target.value)}\r\n                        onBlur={() => setPathIsBlurred('textVal2')}\r\n                        id=\"textVal2\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <TextField\r\n                        error={!!get(validationError, 'numVal')}\r\n                        helperText={get(validationError, 'numVal') || ' '}\r\n                        label=\"Num Val\"\r\n                        type=\"number\"\r\n                        value={get(formData, 'numVal') || ''}\r\n                        onChange={(e) => setPathValue('numVal', e.target.value)}\r\n                        onBlur={() => setPathIsBlurred('numVal')}\r\n                        id=\"numVal\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Autocomplete\r\n                        id=\"selectVal\"\r\n                        onBlur={() => setPathIsBlurred('selectVal')}\r\n                        multiple\r\n                        value={get(formData, 'selectVal') || []}\r\n                        onChange={(event, newValue) => {\r\n                            setPathValue('selectVal', newValue);\r\n                        }}\r\n                        options={options}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                error={!!get(validationError, 'selectVal')}\r\n                                helperText={get(validationError, 'selectVal') || ' '}\r\n                                label=\"Select Val\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Button className=\"mySubmitButton\" variant=\"contained\" onClick={() => handleFormSubmit()}>\r\n                        Submit Form\r\n                    </Button>\r\n                </div>\r\n                <ValidationResult isValid={isValid} />\r\n                <CurrentRulesInfo currentRules={rules} />\r\n            </div>\r\n            <Dialog open={dialogOpen} onClose={() => setDialogOpen(false)}>\r\n                <DialogTitle>Form Data Submitted</DialogTitle>\r\n                <FormSubmitResult formData={formData} />\r\n            </Dialog>\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default ExampleMuiUsage;\r\n","import { Redirect } from 'react-router';\r\n\r\nconst Homepage = () => {\r\n    return <Redirect to=\"/getting-started/installation\" />;\r\n};\r\n\r\nexport default Homepage;\r\n","import { useValidatableForm } from 'react-validatable-form';\r\nimport get from 'lodash.get';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport TextField from '@mui/material/TextField';\r\nimport ValidationResult from '../ValidationResult';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\n\r\nconst initialFormData = {};\r\n\r\nconst rules = [{ path: 'val', ruleSet: [{ rule: 'required' }] }];\r\n\r\nconst RuleRequired = () => {\r\n    const [isValid, validationError, formData, { setPathValue }] = useValidatableForm({\r\n        rules,\r\n        initialFormData,\r\n    });\r\n\r\n    return (\r\n        <ExampleUsageWrapper header=\"required\" codeUrl=\"components/rules/RuleRequired.js\">\r\n            <div>\r\n                <TextField\r\n                    error={!!get(validationError, 'val')}\r\n                    helperText={get(validationError, 'val') || ' '}\r\n                    label=\"val\"\r\n                    type=\"text\"\r\n                    value={get(formData, 'val') || ''}\r\n                    onChange={(e) => setPathValue('val', e.target.value)}\r\n                />\r\n            </div>\r\n            <ValidationResult isValid={isValid} />\r\n            <CurrentRulesInfo currentRules={rules} />\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default RuleRequired;\r\n","export const ruleOptions = [\r\n    'equalTo',\r\n    'lessThan',\r\n    'lessThanOrEqualTo',\r\n    'greaterThan',\r\n    'greaterThanOrEqualTo',\r\n    'notEqualTo',\r\n];\r\n","import { useState } from 'react';\r\nimport { useValidatableForm } from 'react-validatable-form';\r\nimport get from 'lodash.get';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport { ruleOptions } from '../../constants/Constants';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport ValidationResult from '../ValidationResult';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\n\r\nconst defaultComparisonValue = 5;\r\nconst numberRule = { rule: 'number' };\r\nnumberRule[ruleOptions[0]] = defaultComparisonValue;\r\nconst rules = [{ path: 'val', ruleSet: ['required', numberRule], dependantPaths: ['comparisonValue'] }];\r\nconst initialFormData = {\r\n    val: 3,\r\n    ruleOption: ruleOptions[0],\r\n    comparisonValue: defaultComparisonValue,\r\n};\r\n\r\nconst RuleNumber = () => {\r\n    const [isValid, validationError, formData, { setPathValue, setRules }] = useValidatableForm({\r\n        rules,\r\n        initialFormData,\r\n    });\r\n    const [currentRules, setCurrentRules] = useState(rules);\r\n    const [ruleOption, setRuleOption] = useState(ruleOptions[0]);\r\n    const [isFunc, setIsFunc] = useState(false);\r\n    const [onlyIntegers, setOnlyIntegers] = useState(false);\r\n\r\n    const updateRules = (funcParam, ruleParam, onlyIntegersParam) => {\r\n        const newRules = JSON.parse(JSON.stringify(rules));\r\n        const newRuleSet = [...newRules[0].ruleSet];\r\n        const newRule = { rule: 'number' };\r\n        if (ruleParam) {\r\n            if (funcParam) {\r\n                newRule[ruleParam] = (formData) => formData['comparisonValue'];\r\n            } else {\r\n                newRule[ruleParam] = defaultComparisonValue;\r\n            }\r\n        }\r\n        if (onlyIntegersParam) {\r\n            newRule['onlyIntegers'] = true;\r\n        }\r\n        newRuleSet.splice(1, 1, newRule);\r\n        newRules[0].ruleSet = newRuleSet;\r\n        setCurrentRules(newRules);\r\n        setRules(newRules);\r\n    };\r\n\r\n    const handleSetIsFunc = (newValue) => {\r\n        updateRules(newValue, ruleOption, onlyIntegers);\r\n        setIsFunc(newValue);\r\n    };\r\n\r\n    const handleRuleOptionChange = (newValue) => {\r\n        updateRules(isFunc, newValue, onlyIntegers);\r\n        setRuleOption(newValue);\r\n    };\r\n\r\n    const handleOnlyIntegersChange = (newValue) => {\r\n        updateRules(isFunc, ruleOption, newValue);\r\n        setOnlyIntegers(newValue);\r\n    };\r\n\r\n    return (\r\n        <ExampleUsageWrapper header=\"number\" codeUrl=\"components/rules/RuleNumber.js\">\r\n            <div className=\"comparisonDiv\">\r\n                <TextField\r\n                    error={!!get(validationError, 'val')}\r\n                    helperText={get(validationError, 'val') || ' '}\r\n                    label=\"val\"\r\n                    type=\"number\"\r\n                    value={get(formData, 'val')}\r\n                    onChange={(e) => setPathValue('val', e.target.value)}\r\n                />\r\n\r\n                <Autocomplete\r\n                    className=\"ruleOptionComponent\"\r\n                    value={ruleOption}\r\n                    onChange={(event, newValue) => {\r\n                        handleRuleOptionChange(newValue);\r\n                    }}\r\n                    options={ruleOptions}\r\n                    disableClearable={false}\r\n                    renderInput={(params) => <TextField {...params} label=\"ruleOption\" />}\r\n                />\r\n                {isFunc ? (\r\n                    <TextField\r\n                        className=\"comparisonComponent\"\r\n                        label=\"comparisonValue\"\r\n                        type=\"number\"\r\n                        value={get(formData, 'comparisonValue')}\r\n                        onChange={(e) => setPathValue('comparisonValue', e.target.value)}\r\n                    />\r\n                ) : (\r\n                    <TextField\r\n                        disabled={true}\r\n                        className=\"comparisonComponent\"\r\n                        label=\"comparisonValue\"\r\n                        type=\"number\"\r\n                        value={defaultComparisonValue}\r\n                        onChange={() => {}}\r\n                    />\r\n                )}\r\n                <FormGroup className={'checkboxOnRight'}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={isFunc} onChange={(e) => handleSetIsFunc(e.target.checked)} />}\r\n                        label=\"as Function\"\r\n                    />\r\n                </FormGroup>\r\n            </div>\r\n            <div className=\"comparisonDiv\">\r\n                <FormGroup className={'checkboxOnRight'}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={onlyIntegers}\r\n                                onChange={(e) => handleOnlyIntegersChange(e.target.checked)}\r\n                            />\r\n                        }\r\n                        label=\"onlyIntegers\"\r\n                    />\r\n                </FormGroup>\r\n            </div>\r\n            <ValidationResult isValid={isValid} />\r\n            <CurrentRulesInfo currentRules={currentRules} />\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default RuleNumber;\r\n","import { useState } from 'react';\r\nimport { useValidatableForm } from 'react-validatable-form';\r\nimport get from 'lodash.get';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport { ruleOptions } from '../../constants/Constants';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport ValidationResult from '../ValidationResult';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\n\r\nconst defaultComparisonValue = 5;\r\nconst lengthRule = { rule: 'length' };\r\nlengthRule[ruleOptions[0]] = defaultComparisonValue;\r\nconst rules = [{ path: 'val', ruleSet: ['required', lengthRule], dependantPaths: ['comparisonValue'] }];\r\nconst initialFormData = {\r\n    val: 'aa',\r\n    ruleOption: ruleOptions[0],\r\n    comparisonValue: defaultComparisonValue,\r\n};\r\n\r\nconst RuleLength = () => {\r\n    const [isValid, validationError, formData, { setPathValue, setRules }] = useValidatableForm({\r\n        rules,\r\n        initialFormData,\r\n    });\r\n    const [currentRules, setCurrentRules] = useState(rules);\r\n    const [ruleOption, setRuleOption] = useState(ruleOptions[0]);\r\n    const [isFunc, setIsFunc] = useState(false);\r\n\r\n    const updateRules = (funcParam, ruleParam) => {\r\n        const newRules = JSON.parse(JSON.stringify(rules));\r\n        const newRuleSet = [...newRules[0].ruleSet];\r\n        const newRule = { rule: 'length' };\r\n        if (funcParam) {\r\n            newRule[ruleParam] = (formData) => formData['comparisonValue'];\r\n        } else {\r\n            newRule[ruleParam] = defaultComparisonValue;\r\n        }\r\n        newRuleSet.splice(1, 1, newRule);\r\n        newRules[0].ruleSet = newRuleSet;\r\n        setCurrentRules(newRules);\r\n        setRules(newRules);\r\n    };\r\n\r\n    const handleSetIsFunc = (newValue) => {\r\n        updateRules(newValue, ruleOption);\r\n        setIsFunc(newValue);\r\n    };\r\n\r\n    const handleRuleOptionChange = (newValue) => {\r\n        updateRules(isFunc, newValue);\r\n        setRuleOption(newValue);\r\n    };\r\n\r\n    return (\r\n        <ExampleUsageWrapper header=\"length\" codeUrl=\"components/rules/RuleLength.js\">\r\n            <div className=\"comparisonDiv\">\r\n                <TextField\r\n                    error={!!get(validationError, 'val')}\r\n                    helperText={get(validationError, 'val') || ' '}\r\n                    label=\"val\"\r\n                    type=\"text\"\r\n                    value={get(formData, 'val')}\r\n                    onChange={(e) => setPathValue('val', e.target.value)}\r\n                />\r\n\r\n                <Autocomplete\r\n                    className=\"ruleOptionComponent\"\r\n                    value={ruleOption}\r\n                    onChange={(event, newValue) => {\r\n                        handleRuleOptionChange(newValue);\r\n                    }}\r\n                    options={ruleOptions}\r\n                    disableClearable={true}\r\n                    renderInput={(params) => <TextField {...params} label=\"ruleOption\" />}\r\n                />\r\n                {isFunc ? (\r\n                    <TextField\r\n                        className=\"comparisonComponent\"\r\n                        label=\"comparisonValue\"\r\n                        type=\"number\"\r\n                        value={get(formData, 'comparisonValue')}\r\n                        onChange={(e) => setPathValue('comparisonValue', e.target.value)}\r\n                    />\r\n                ) : (\r\n                    <TextField\r\n                        disabled={true}\r\n                        className=\"comparisonComponent\"\r\n                        label=\"comparisonValue\"\r\n                        type=\"number\"\r\n                        value={defaultComparisonValue}\r\n                        onChange={() => {}}\r\n                    />\r\n                )}\r\n                <FormGroup className={'checkboxOnRight'}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={isFunc} onChange={(e) => handleSetIsFunc(e.target.checked)} />}\r\n                        label=\"as Function\"\r\n                    />\r\n                </FormGroup>\r\n            </div>\r\n            <ValidationResult isValid={isValid} />\r\n            <CurrentRulesInfo currentRules={currentRules} />\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default RuleLength;\r\n","import { useState } from 'react';\r\nimport { useValidatableForm } from 'react-validatable-form';\r\nimport get from 'lodash.get';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport { ruleOptions } from '../../constants/Constants';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport ValidationResult from '../ValidationResult';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\nimport { options } from '../../constants/Data';\r\n\r\nconst defaultComparisonValue = 3;\r\nconst listSizeRule = { rule: 'listSize' };\r\nlistSizeRule[ruleOptions[0]] = defaultComparisonValue;\r\nconst rules = [{ path: 'val', ruleSet: ['required', listSizeRule], dependantPaths: ['comparisonValue'] }];\r\nconst initialFormData = {\r\n    val: [...options].slice(0, 2),\r\n    ruleOption: ruleOptions[0],\r\n    comparisonValue: defaultComparisonValue,\r\n};\r\n\r\nconst RuleListSize = () => {\r\n    const [isValid, validationError, formData, { setPathValue, setRules }] = useValidatableForm({\r\n        rules,\r\n        initialFormData,\r\n    });\r\n    const [currentRules, setCurrentRules] = useState(rules);\r\n    const [ruleOption, setRuleOption] = useState(ruleOptions[0]);\r\n    const [isFunc, setIsFunc] = useState(false);\r\n\r\n    const updateRules = (funcParam, ruleParam) => {\r\n        const newRules = JSON.parse(JSON.stringify(rules));\r\n        const newRuleSet = [...newRules[0].ruleSet];\r\n        const newRule = { rule: 'listSize' };\r\n        if (funcParam) {\r\n            newRule[ruleParam] = (formData) => formData['comparisonValue'];\r\n        } else {\r\n            newRule[ruleParam] = defaultComparisonValue;\r\n        }\r\n        newRuleSet.splice(1, 1, newRule);\r\n        newRules[0].ruleSet = newRuleSet;\r\n        setCurrentRules(newRules);\r\n        setRules(newRules);\r\n    };\r\n\r\n    const handleSetIsFunc = (newValue) => {\r\n        updateRules(newValue, ruleOption);\r\n        setIsFunc(newValue);\r\n    };\r\n\r\n    const handleRuleOptionChange = (newValue) => {\r\n        updateRules(isFunc, newValue);\r\n        setRuleOption(newValue);\r\n    };\r\n\r\n    return (\r\n        <ExampleUsageWrapper header=\"listSize\" codeUrl=\"components/rules/RuleListSize.js\">\r\n            <div className=\"comparisonDiv\">\r\n                <Autocomplete\r\n                    multiple\r\n                    value={get(formData, 'val')}\r\n                    onChange={(event, newValue) => {\r\n                        setPathValue('val', newValue);\r\n                    }}\r\n                    options={options}\r\n                    renderInput={(params) => (\r\n                        <TextField\r\n                            {...params}\r\n                            error={!!validationError.val}\r\n                            helperText={validationError.val || ' '}\r\n                            label=\"equalTo\"\r\n                        />\r\n                    )}\r\n                />\r\n\r\n                <Autocomplete\r\n                    className=\"ruleOptionComponent\"\r\n                    value={ruleOption}\r\n                    onChange={(event, newValue) => {\r\n                        handleRuleOptionChange(newValue);\r\n                    }}\r\n                    options={ruleOptions}\r\n                    disableClearable={true}\r\n                    renderInput={(params) => <TextField {...params} label=\"ruleOption\" />}\r\n                />\r\n                {isFunc ? (\r\n                    <TextField\r\n                        className=\"comparisonComponent\"\r\n                        label=\"comparisonValue\"\r\n                        type=\"number\"\r\n                        value={get(formData, 'comparisonValue')}\r\n                        onChange={(e) => setPathValue('comparisonValue', e.target.value)}\r\n                    />\r\n                ) : (\r\n                    <TextField\r\n                        disabled={true}\r\n                        className=\"comparisonComponent\"\r\n                        label=\"comparisonValue\"\r\n                        type=\"number\"\r\n                        value={defaultComparisonValue}\r\n                        onChange={() => {}}\r\n                    />\r\n                )}\r\n                <FormGroup className={'checkboxOnRight'}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={isFunc} onChange={(e) => handleSetIsFunc(e.target.checked)} />}\r\n                        label=\"as Function\"\r\n                    />\r\n                </FormGroup>\r\n            </div>\r\n            <ValidationResult isValid={isValid} />\r\n            <CurrentRulesInfo currentRules={currentRules} />\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default RuleListSize;\r\n","import { useState } from 'react';\r\nimport { useValidatableForm } from 'react-validatable-form';\r\nimport get from 'lodash.get';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport { ruleOptions } from '../../constants/Constants';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport TextField from '@mui/material/TextField';\r\nimport DesktopDatePicker from '@mui/lab/DesktopDatePicker';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport ValidationResult from '../ValidationResult';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\n\r\nconst today = new Date();\r\nconst defaultComparisonValue = today;\r\nvar yesterday = new Date();\r\nyesterday.setDate(yesterday.getDate() - 1);\r\nconst dateRule = { rule: 'date' };\r\ndateRule[ruleOptions[0]] = defaultComparisonValue;\r\nconst rules = [{ path: 'val', ruleSet: ['required', dateRule], dependantPaths: ['comparisonValue'] }];\r\nconst initialFormData = {\r\n    val: yesterday,\r\n    ruleOption: ruleOptions[0],\r\n    comparisonValue: defaultComparisonValue,\r\n};\r\n\r\nconst RuleDate = () => {\r\n    const [isValid, validationError, formData, { setPathValue, setRules }] = useValidatableForm({\r\n        rules,\r\n        initialFormData,\r\n    });\r\n    const [currentRules, setCurrentRules] = useState(rules);\r\n    const [ruleOption, setRuleOption] = useState(ruleOptions[0]);\r\n    const [isFunc, setIsFunc] = useState(false);\r\n\r\n    const updateRules = (funcParam, ruleParam) => {\r\n        const newRules = JSON.parse(JSON.stringify(rules));\r\n        const newRuleSet = [...newRules[0].ruleSet];\r\n        const newRule = { rule: 'date' };\r\n        if (ruleParam) {\r\n            if (funcParam) {\r\n                newRule[ruleParam] = (formData) => formData['comparisonValue'];\r\n            } else {\r\n                newRule[ruleParam] = defaultComparisonValue;\r\n            }\r\n        }\r\n        newRuleSet.splice(1, 1, newRule);\r\n        newRules[0].ruleSet = newRuleSet;\r\n        setCurrentRules(newRules);\r\n        setRules(newRules);\r\n    };\r\n\r\n    const handleSetIsFunc = (newValue) => {\r\n        updateRules(newValue, ruleOption);\r\n        setIsFunc(newValue);\r\n    };\r\n\r\n    const handleRuleOptionChange = (newValue) => {\r\n        updateRules(isFunc, newValue);\r\n        setRuleOption(newValue);\r\n    };\r\n\r\n    return (\r\n        <ExampleUsageWrapper header=\"date\" codeUrl=\"components/rules/RuleDate.js\">\r\n            <div className=\"comparisonDiv\">\r\n                <DesktopDatePicker\r\n                    label=\"val\"\r\n                    inputFormat=\"MM/dd/yyyy\"\r\n                    value={get(formData, 'val')}\r\n                    onChange={(val) => setPathValue('val', val)}\r\n                    renderInput={(params) => (\r\n                        <TextField\r\n                            {...params}\r\n                            error={!!get(validationError, 'val')}\r\n                            helperText={get(validationError, 'val') || ' '}\r\n                        />\r\n                    )}\r\n                />\r\n\r\n                <Autocomplete\r\n                    className=\"ruleOptionComponent\"\r\n                    value={ruleOption}\r\n                    onChange={(event, newValue) => {\r\n                        handleRuleOptionChange(newValue);\r\n                    }}\r\n                    options={ruleOptions}\r\n                    disableClearable={false}\r\n                    renderInput={(params) => <TextField {...params} label=\"ruleOption\" />}\r\n                />\r\n                {isFunc ? (\r\n                    <DesktopDatePicker\r\n                        label=\"comparisonValue\"\r\n                        inputFormat=\"MM/dd/yyyy\"\r\n                        value={get(formData, 'comparisonValue')}\r\n                        onChange={(val) => setPathValue('comparisonValue', val)}\r\n                        renderInput={(params) => <TextField className=\"comparisonComponent\" {...params} />}\r\n                    />\r\n                ) : (\r\n                    <DesktopDatePicker\r\n                        disabled={true}\r\n                        style={{ width: 200 }}\r\n                        label=\"comparisonValue\"\r\n                        inputFormat=\"MM/dd/yyyy\"\r\n                        value={today}\r\n                        onChange={() => {}}\r\n                        renderInput={(params) => <TextField className=\"comparisonComponent\" {...params} />}\r\n                    />\r\n                )}\r\n                <FormGroup className={'checkboxOnRight'}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={isFunc} onChange={(e) => handleSetIsFunc(e.target.checked)} />}\r\n                        label=\"as Function\"\r\n                    />\r\n                </FormGroup>\r\n            </div>\r\n            <ValidationResult isValid={isValid} />\r\n            <CurrentRulesInfo currentRules={currentRules} />\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default RuleDate;\r\n","import { useValidatableForm } from 'react-validatable-form';\r\nimport get from 'lodash.get';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport TextField from '@mui/material/TextField';\r\nimport ValidationResult from '../ValidationResult';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\n\r\nconst initialFormData = {\r\n    val: 'aa',\r\n};\r\n\r\nconst rules = [{ path: 'val', ruleSet: [{ rule: 'required' }, { rule: 'email' }] }];\r\n\r\nconst RuleEmail = () => {\r\n    const [isValid, validationError, formData, { setPathValue }] = useValidatableForm({\r\n        rules,\r\n        initialFormData,\r\n    });\r\n\r\n    return (\r\n        <ExampleUsageWrapper header=\"email\" codeUrl=\"components/rules/RuleEmail.js\">\r\n            <div>\r\n                <TextField\r\n                    error={!!get(validationError, 'val')}\r\n                    helperText={get(validationError, 'val') || ' '}\r\n                    label=\"val\"\r\n                    type=\"text\"\r\n                    value={get(formData, 'val') || ''}\r\n                    onChange={(e) => setPathValue('val', e.target.value)}\r\n                />\r\n            </div>\r\n            <ValidationResult isValid={isValid} />\r\n            <CurrentRulesInfo currentRules={rules} />\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default RuleEmail;\r\n","import { useValidatableForm } from 'react-validatable-form';\r\nimport get from 'lodash.get';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport TextField from '@mui/material/TextField';\r\nimport ValidationResult from '../ValidationResult';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\n\r\nconst initialFormData = {\r\n    val: 'aa',\r\n};\r\n\r\nconst rules = [{ path: 'val', ruleSet: [{ rule: 'required' }, { rule: 'url' }] }];\r\n\r\nconst RuleUrl = () => {\r\n    const [isValid, validationError, formData, { setPathValue }] = useValidatableForm({\r\n        rules,\r\n        initialFormData,\r\n    });\r\n\r\n    return (\r\n        <ExampleUsageWrapper header=\"url\" codeUrl=\"components/rules/RuleUrl.js\">\r\n            <div>\r\n                <TextField\r\n                    error={!!get(validationError, 'val')}\r\n                    helperText={get(validationError, 'val') || ' '}\r\n                    label=\"val\"\r\n                    type=\"text\"\r\n                    value={get(formData, 'val') || ''}\r\n                    onChange={(e) => setPathValue('val', e.target.value)}\r\n                />\r\n            </div>\r\n            <ValidationResult isValid={isValid} />\r\n            <CurrentRulesInfo currentRules={rules} />\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default RuleUrl;\r\n","import { useValidatableForm } from 'react-validatable-form';\r\nimport get from 'lodash.get';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport TextField from '@mui/material/TextField';\r\nimport ValidationResult from '../ValidationResult';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\n\r\nconst initialFormData = {\r\n    val: 'aa',\r\n};\r\n\r\nconst rules = [{ path: 'val', ruleSet: [{ rule: 'required' }, { rule: 'iban' }] }];\r\n\r\nconst RuleIban = () => {\r\n    const [isValid, validationError, formData, { setPathValue }] = useValidatableForm({\r\n        rules,\r\n        initialFormData,\r\n    });\r\n\r\n    return (\r\n        <ExampleUsageWrapper header=\"iban\" codeUrl=\"components/rules/RuleIban.js\">\r\n            <div>\r\n                <TextField\r\n                    error={!!get(validationError, 'val')}\r\n                    helperText={get(validationError, 'val') || ' '}\r\n                    label=\"val\"\r\n                    type=\"text\"\r\n                    value={get(formData, 'val') || ''}\r\n                    onChange={(e) => setPathValue('val', e.target.value)}\r\n                />\r\n            </div>\r\n            <ValidationResult isValid={isValid} />\r\n            <CurrentRulesInfo currentRules={rules} />\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default RuleIban;\r\n","import { useValidatableForm } from 'react-validatable-form';\r\nimport get from 'lodash.get';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport TextField from '@mui/material/TextField';\r\nimport ValidationResult from '../ValidationResult';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\n\r\nconst initialFormData = {\r\n    val: 'aa',\r\n};\r\n\r\nconst customRule = (ruleParams) => {\r\n    const { value } = ruleParams;\r\n    if (value && (!value.includes('g') || value.length < 5)) {\r\n        return 'this field should include letter `g` and its length should be greater than 5';\r\n    }\r\n    return null;\r\n};\r\n\r\nconst rules = [{ path: 'val', ruleSet: ['required', { rule: customRule }] }];\r\n\r\nconst RuleCustomOnHook = () => {\r\n    const [isValid, validationError, formData, { setPathValue }] = useValidatableForm({\r\n        rules,\r\n        initialFormData,\r\n    });\r\n\r\n    return (\r\n        <ExampleUsageWrapper header=\"customly defined on hook\" codeUrl=\"components/rules/RuleCustomOnHook.js\">\r\n            <div>\r\n                <TextField\r\n                    error={!!get(validationError, 'val')}\r\n                    helperText={get(validationError, 'val') || ' '}\r\n                    label=\"val\"\r\n                    type=\"text\"\r\n                    value={get(formData, 'val') || ''}\r\n                    onChange={(e) => setPathValue('val', e.target.value)}\r\n                />\r\n            </div>\r\n            <ValidationResult isValid={isValid} />\r\n            <CurrentRulesInfo currentRules={rules} />\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default RuleCustomOnHook;\r\n","import { useValidatableForm } from 'react-validatable-form';\r\nimport get from 'lodash.get';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport TextField from '@mui/material/TextField';\r\nimport ValidationResult from '../ValidationResult';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\n\r\nconst initialFormData = {\r\n    val: 'b',\r\n};\r\n\r\nconst rules = [{ path: 'val', ruleSet: [{ rule: 'required' }, { rule: 'myCustomRule' }] }];\r\n\r\nconst RuleCustomOnProvider = () => {\r\n    const [isValid, validationError, formData, { setPathValue }] = useValidatableForm({\r\n        rules,\r\n        initialFormData,\r\n    });\r\n\r\n    return (\r\n        <ExampleUsageWrapper\r\n            header=\"custom on provider\"\r\n            codeUrl={['components/rules/RuleCustomOnProvider.js', 'components/Main.js']}\r\n        >\r\n            <div>\r\n                <TextField\r\n                    error={!!get(validationError, 'val')}\r\n                    helperText={get(validationError, 'val') || ' '}\r\n                    label=\"val\"\r\n                    type=\"text\"\r\n                    value={get(formData, 'val') || ''}\r\n                    onChange={(e) => setPathValue('val', e.target.value)}\r\n                />\r\n            </div>\r\n            <ValidationResult isValid={isValid} />\r\n            <CurrentRulesInfo currentRules={rules} />\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default RuleCustomOnProvider;\r\n","import { useState } from 'react';\r\nimport { useValidatableForm } from 'react-validatable-form';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport Button from '@mui/material/Button';\r\nimport ValidationResult from '../ValidationResult';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\nimport { Dialog, DialogTitle } from '@mui/material';\r\nimport FormSubmitResult from '../FormSubmitResult';\r\nimport { options } from '../../constants/Data';\r\n\r\nconst initialFormData = {\r\n    textVal1: '',\r\n    textVal2: '',\r\n    val3: [],\r\n    textVal4: '',\r\n    checkVal: false,\r\n};\r\n\r\nconst rules = [\r\n    { path: 'textVal1', ruleSet: [{ rule: 'required' }] },\r\n    { path: 'textVal2', ruleSet: [{ rule: 'required' }, { rule: 'length', greaterThanOrEqualTo: 7 }] },\r\n    { path: 'val3', ruleSet: [{ rule: 'required' }, { rule: 'listSize', equalTo: 2 }] },\r\n    { path: 'textVal4', ruleSet: [{ rule: 'required' }, { rule: 'url' }] },\r\n];\r\n\r\nconst AdvancedHideBeforeSubmit = () => {\r\n    const [isValid, validationError, formData, { setPathValue, setFormIsSubmitted, resetForm }] = useValidatableForm({\r\n        rules,\r\n        initialFormData,\r\n        hideBeforeSubmit: true,\r\n    });\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n    const handleFormSubmit = () => {\r\n        const submitResultValid = setFormIsSubmitted();\r\n        if (submitResultValid) {\r\n            setDialogOpen(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ExampleUsageWrapper header=\"hideBeforeSubmit\" codeUrl=\"components/advanced/AdvancedHideBeforeSubmit.js\">\r\n            <div>\r\n                <div className={'formField'}>\r\n                    <TextField\r\n                        error={!!validationError.textVal1}\r\n                        helperText={validationError.textVal1 || ' '}\r\n                        label=\"requiredField\"\r\n                        type=\"text\"\r\n                        value={formData.textVal1}\r\n                        onChange={(e) => setPathValue('textVal1', e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        error={!!validationError.textVal2}\r\n                        helperText={validationError.textVal2 || ' '}\r\n                        label=\"requiredAndLengthField\"\r\n                        type=\"text\"\r\n                        value={formData.textVal2}\r\n                        onChange={(e) => setPathValue('textVal2', e.target.value)}\r\n                    />\r\n                    <Autocomplete\r\n                        multiple\r\n                        value={formData.val3}\r\n                        onChange={(event, newValue) => {\r\n                            setPathValue('val3', newValue);\r\n                        }}\r\n                        options={options}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                error={!!validationError.val3}\r\n                                helperText={validationError.val3 || ' '}\r\n                                label=\"requiredAndListSize\"\r\n                            />\r\n                        )}\r\n                    />\r\n                    <TextField\r\n                        error={!!validationError.textVal4}\r\n                        helperText={validationError.textVal4 || ' '}\r\n                        label=\"requiredAndUrl\"\r\n                        type=\"text\"\r\n                        value={formData.textVal4}\r\n                        onChange={(e) => setPathValue('textVal4', e.target.value)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Button className=\"mySubmitButton\" variant=\"contained\" onClick={() => handleFormSubmit()}>\r\n                        Submit Form\r\n                    </Button>\r\n                    <Button className=\"mySubmitButton\" variant=\"contained\" onClick={() => resetForm()}>\r\n                        Reset Form\r\n                    </Button>\r\n                </div>\r\n                <ValidationResult isValid={isValid} />\r\n                <CurrentRulesInfo currentRules={rules} />\r\n            </div>\r\n            <Dialog open={dialogOpen} onClose={() => setDialogOpen(false)}>\r\n                <DialogTitle>Form Data Submitted</DialogTitle>\r\n                <FormSubmitResult formData={formData} />\r\n            </Dialog>\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default AdvancedHideBeforeSubmit;\r\n","import { useState } from 'react';\r\nimport { useValidatableForm } from 'react-validatable-form';\r\nimport get from 'lodash.get';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport Button from '@mui/material/Button';\r\nimport ValidationResult from '../ValidationResult';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\nimport { Dialog, DialogTitle } from '@mui/material';\r\nimport FormSubmitResult from '../FormSubmitResult';\r\nimport { options } from '../../constants/Data';\r\n\r\nconst initialFormData = {};\r\n\r\nconst rules = [\r\n    { path: 'textVal1', ruleSet: [{ rule: 'required' }] },\r\n    { path: 'textVal2', ruleSet: [{ rule: 'required' }, { rule: 'length', greaterThanOrEqualTo: 7 }] },\r\n    { path: 'val3', ruleSet: [{ rule: 'required' }, { rule: 'listSize', equalTo: 2 }] },\r\n    { path: 'textVal4', ruleSet: [{ rule: 'required' }, { rule: 'url' }] },\r\n];\r\n\r\nconst AdvancedShowAfterBlur = () => {\r\n    const [\r\n        isValid,\r\n        validationError,\r\n        formData,\r\n        { setPathValue, setFormIsSubmitted, setPathIsBlurred, resetForm },\r\n    ] = useValidatableForm({\r\n        rules,\r\n        initialFormData,\r\n        hideBeforeSubmit: true,\r\n        showAfterBlur: true,\r\n    });\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n    const handleFormSubmit = () => {\r\n        const submitResultValid = setFormIsSubmitted();\r\n        if (submitResultValid) {\r\n            setDialogOpen(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ExampleUsageWrapper header=\"showAfterBlur\" codeUrl=\"components/advanced/AdvancedShowAfterBlur.js\">\r\n            <div>\r\n                <div className={'formField'}>\r\n                    <TextField\r\n                        id={'textVal1'}\r\n                        error={!!get(validationError, 'textVal1')}\r\n                        helperText={get(validationError, 'textVal1') || ' '}\r\n                        label=\"requiredField\"\r\n                        type=\"text\"\r\n                        value={get(formData, 'textVal1') || ''}\r\n                        onChange={(e) => setPathValue('textVal1', e.target.value)}\r\n                        onBlur={() => setPathIsBlurred('textVal1')}\r\n                    />\r\n                    <TextField\r\n                        id={'textVal2'}\r\n                        error={!!get(validationError, 'textVal2')}\r\n                        helperText={get(validationError, 'textVal2') || ' '}\r\n                        label=\"requiredAndLengthField\"\r\n                        type=\"text\"\r\n                        value={get(formData, 'textVal2') || ''}\r\n                        onChange={(e) => setPathValue('textVal2', e.target.value)}\r\n                        onBlur={() => setPathIsBlurred('textVal2')}\r\n                    />\r\n                    <Autocomplete\r\n                        id={'val3'}\r\n                        multiple\r\n                        value={get(formData, 'val3') || []}\r\n                        onChange={(event, newValue) => {\r\n                            setPathValue('val3', newValue);\r\n                        }}\r\n                        onBlur={() => setPathIsBlurred('val3')}\r\n                        options={options}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                error={!!get(validationError, 'val3')}\r\n                                helperText={get(validationError, 'val3') || ' '}\r\n                                label=\"requiredAndListSize\"\r\n                            />\r\n                        )}\r\n                    />\r\n                    <TextField\r\n                        id={'textVal4'}\r\n                        error={!!get(validationError, 'textVal4')}\r\n                        helperText={get(validationError, 'textVal4') || ' '}\r\n                        label=\"requiredAndUrl\"\r\n                        type=\"text\"\r\n                        value={get(formData, 'textVal4') || ''}\r\n                        onChange={(e) => setPathValue('textVal4', e.target.value)}\r\n                        onBlur={() => setPathIsBlurred('textVal4')}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Button className=\"mySubmitButton\" variant=\"contained\" onClick={() => handleFormSubmit()}>\r\n                        Submit Form\r\n                    </Button>\r\n                    <Button className=\"mySubmitButton\" variant=\"contained\" onClick={() => resetForm()}>\r\n                        Reset Form\r\n                    </Button>\r\n                </div>\r\n                <ValidationResult isValid={isValid} />\r\n                <CurrentRulesInfo currentRules={rules} />\r\n            </div>\r\n            <Dialog open={dialogOpen} onClose={() => setDialogOpen(false)}>\r\n                <DialogTitle>Form Data Submitted</DialogTitle>\r\n                <FormSubmitResult formData={formData} />\r\n            </Dialog>\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default AdvancedShowAfterBlur;\r\n","import { useState } from 'react';\r\nimport { useValidatableForm } from 'react-validatable-form';\r\nimport get from 'lodash.get';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport Button from '@mui/material/Button';\r\nimport ValidationResult from '../ValidationResult';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\nimport { Dialog, DialogTitle } from '@mui/material';\r\nimport FormSubmitResult from '../FormSubmitResult';\r\nimport { options } from '../../constants/Data';\r\n\r\nconst initialFormData = {\r\n    textVal1: '',\r\n    textVal2: '',\r\n    val3: [],\r\n    textVal4: '',\r\n    checkVal: false,\r\n};\r\n\r\nconst rules = [\r\n    { path: 'textVal1', ruleSet: [{ rule: 'required' }] },\r\n    {\r\n        path: 'textVal2',\r\n        ruleSet: [{ rule: 'required' }, { rule: 'length', greaterThanOrEqualTo: 7 }],\r\n    },\r\n    { path: 'val3', ruleSet: [{ rule: 'required' }, { rule: 'listSize', equalTo: 2 }] },\r\n    { path: 'textVal4', ruleSet: [{ rule: 'required' }, { rule: 'url' }] },\r\n];\r\n\r\nconst AdvancedFocusToErrorAfterSubmit = () => {\r\n    const [\r\n        isValid,\r\n        validationError,\r\n        formData,\r\n        { setPathValue, setFormIsSubmitted, setPathIsBlurred },\r\n    ] = useValidatableForm({\r\n        rules,\r\n        initialFormData,\r\n        hideBeforeSubmit: true,\r\n        showAfterBlur: true,\r\n        focusToErrorAfterSubmit: true,\r\n    });\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n    const handleFormSubmit = () => {\r\n        const submitResultValid = setFormIsSubmitted();\r\n        if (submitResultValid) {\r\n            setDialogOpen(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ExampleUsageWrapper\r\n            header=\"focusToErrorAfterSubmit\"\r\n            codeUrl=\"components/advanced/AdvancedFocusToErrorAfterSubmit.js\"\r\n        >\r\n            <div>\r\n                <div className={'formField'}>\r\n                    <TextField\r\n                        error={!!get(validationError, 'textVal1')}\r\n                        helperText={get(validationError, 'textVal1') || ' '}\r\n                        label=\"requiredField\"\r\n                        type=\"text\"\r\n                        value={get(formData, 'textVal1')}\r\n                        onChange={(e) => setPathValue('textVal1', e.target.value)}\r\n                        onBlur={() => setPathIsBlurred('textVal1')}\r\n                        id=\"textVal1\"\r\n                    />\r\n                    <TextField\r\n                        error={!!get(validationError, 'textVal2')}\r\n                        helperText={get(validationError, 'textVal2') || ' '}\r\n                        label=\"requiredAndLengthField\"\r\n                        type=\"text\"\r\n                        value={get(formData, 'textVal2')}\r\n                        onChange={(e) => setPathValue('textVal2', e.target.value)}\r\n                        onBlur={() => setPathIsBlurred('textVal2')}\r\n                        id=\"textVal2\"\r\n                    />\r\n                    <Autocomplete\r\n                        multiple\r\n                        value={get(formData, 'val3')}\r\n                        onChange={(event, newValue) => {\r\n                            setPathValue('val3', newValue);\r\n                        }}\r\n                        onBlur={() => setPathIsBlurred('val3')}\r\n                        options={options}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                error={!!get(validationError, 'val3')}\r\n                                helperText={get(validationError, 'val3') || ' '}\r\n                                label=\"requiredAndListSize\"\r\n                            />\r\n                        )}\r\n                        id=\"val3\"\r\n                    />\r\n                    <TextField\r\n                        error={!!get(validationError, 'textVal4')}\r\n                        helperText={get(validationError, 'textVal4') || ' '}\r\n                        label=\"requiredAndUrl\"\r\n                        type=\"text\"\r\n                        value={get(formData, 'textVal4')}\r\n                        onChange={(e) => setPathValue('textVal4', e.target.value)}\r\n                        onBlur={() => setPathIsBlurred('textVal4')}\r\n                        id=\"textVal4\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Button className=\"mySubmitButton\" variant=\"contained\" onClick={() => handleFormSubmit()}>\r\n                        Submit Form\r\n                    </Button>\r\n                </div>\r\n                <ValidationResult isValid={isValid} />\r\n                <CurrentRulesInfo currentRules={rules} />\r\n            </div>\r\n            <Dialog open={dialogOpen} onClose={() => setDialogOpen(false)}>\r\n                <DialogTitle>Form Data Submitted</DialogTitle>\r\n                <FormSubmitResult formData={formData} />\r\n            </Dialog>\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default AdvancedFocusToErrorAfterSubmit;\r\n","import { useValidatableForm } from 'react-validatable-form';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport TextField from '@mui/material/TextField';\r\nimport ValidationResult from '../ValidationResult';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\n\r\nconst initialFormData = {\r\n    val1: 'a',\r\n    val2: 'a',\r\n    checkVal: false,\r\n};\r\n\r\nconst customMessageFunc = (errorParams) => {\r\n    if (errorParams.value > errorParams.comparisonValue) {\r\n        return `This field's length should be ${errorParams.comparisonValue}, your input's (${errorParams.value}) is greater than this value`;\r\n    }\r\n    return `This field's length should be ${errorParams.comparisonValue}, your input's (${errorParams.value}) is less than this value`;\r\n};\r\n\r\nconst rules = [\r\n    {\r\n        path: 'val1',\r\n        ruleSet: [\r\n            'required',\r\n            {\r\n                rule: 'length',\r\n                greaterThan: 8,\r\n                customMessage: \"This field's length is ${value}, however it should be greater than ${comparisonValue}\",\r\n            },\r\n        ],\r\n    },\r\n    { path: 'val2', ruleSet: ['required', { rule: 'length', equalTo: 5, customMessage: customMessageFunc }] },\r\n];\r\n\r\nconst CustomMessage = () => {\r\n    const [isValid, validationError, formData, { setPathValue }] = useValidatableForm({\r\n        rules,\r\n        initialFormData,\r\n    });\r\n\r\n    return (\r\n        <ExampleUsageWrapper header=\"customMessage\" codeUrl=\"components/customizations/CustomMessage.js\">\r\n            <div>\r\n                <div>\r\n                    <TextField\r\n                        error={!!validationError.val1}\r\n                        helperText={validationError.val1 || ' '}\r\n                        label=\"val1 (customMessage as string)\"\r\n                        type=\"text\"\r\n                        value={formData.val1}\r\n                        onChange={(e) => setPathValue('val1', e.target.value)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <TextField\r\n                        error={!!validationError.val2}\r\n                        helperText={validationError.val2 || ' '}\r\n                        label=\"val2 (customMessage as function)\"\r\n                        type=\"text\"\r\n                        value={formData.val2}\r\n                        onChange={(e) => setPathValue('val2', e.target.value)}\r\n                    />\r\n                </div>\r\n                <ValidationResult isValid={isValid} />\r\n                <CurrentRulesInfo currentRules={rules} />\r\n            </div>\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default CustomMessage;\r\n","import { useValidatableForm } from 'react-validatable-form';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport TextField from '@mui/material/TextField';\r\nimport ValidationResult from '../ValidationResult';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\n\r\nconst initialFormData = {\r\n    val1: '',\r\n    val2: '',\r\n    checkVal: false,\r\n};\r\n\r\nconst rules = [\r\n    { path: 'val1', ruleSet: ['required', { rule: 'length', greaterThan: 8 }] },\r\n    { path: 'val2', ruleSet: ['required', { rule: 'length', equalTo: 5 }] },\r\n];\r\n\r\nconst CustomTranslations = () => {\r\n    const [isValid, validationError, formData, { setPathValue }] = useValidatableForm({\r\n        rules,\r\n        initialFormData,\r\n    });\r\n\r\n    return (\r\n        <ExampleUsageWrapper\r\n            header=\"translations\"\r\n            codeUrl={['components/customizations/CustomTranslations.js', 'components/Main.js']}\r\n        >\r\n            <div>\r\n                <div>\r\n                    <TextField\r\n                        error={!!validationError.val1}\r\n                        helperText={validationError.val1 || ' '}\r\n                        label=\"val1 (requiredAndLengthGreaterThan)\"\r\n                        type=\"text\"\r\n                        value={formData.val1}\r\n                        onChange={(e) => setPathValue('val1', e.target.value)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <TextField\r\n                        error={!!validationError.val2}\r\n                        helperText={validationError.val2 || ' '}\r\n                        label=\"val2 (requiredAndLengthEqualTo)\"\r\n                        type=\"text\"\r\n                        value={formData.val2}\r\n                        onChange={(e) => setPathValue('val2', e.target.value)}\r\n                    />\r\n                </div>\r\n                <ValidationResult isValid={isValid} />\r\n                <CurrentRulesInfo currentRules={rules} />\r\n            </div>\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default CustomTranslations;\r\n","import get from 'lodash.get';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nconst AdvancedSubComponent = (props) => {\r\n    const { validationError, formData, setPathValue, setPathIsBlurred } = props;\r\n    return (\r\n        <div>\r\n            <div className={'formField'}>\r\n                <TextField\r\n                    error={!!get(validationError, 'subComponentElement1')}\r\n                    helperText={get(validationError, 'subComponentElement1') || ' '}\r\n                    label=\"subComponentElement1\"\r\n                    type=\"text\"\r\n                    value={get(formData, 'subComponentElement1') || ''}\r\n                    onChange={(e) => setPathValue('subComponentElement1', e.target.value)}\r\n                    onBlur={() => setPathIsBlurred('subComponentElement1')}\r\n                    id=\"subComponentElement1\"\r\n                />\r\n                <TextField\r\n                    error={!!get(validationError, 'subComponentElement2')}\r\n                    helperText={get(validationError, 'subComponentElement2') || ' '}\r\n                    label=\"bottomElement2\"\r\n                    type=\"text\"\r\n                    value={get(formData, 'subComponentElement2') || ''}\r\n                    onChange={(e) => setPathValue('subComponentElement2', e.target.value)}\r\n                    onBlur={() => setPathIsBlurred('subComponentElement2')}\r\n                    id=\"subComponentElement2\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdvancedSubComponent;\r\n","import { useState } from 'react';\r\nimport { useValidatableForm } from 'react-validatable-form';\r\nimport get from 'lodash.get';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport ValidationResult from '../ValidationResult';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\nimport AdvancedSubComponent from './AdvancedSubComponent';\r\nimport { Dialog, DialogTitle } from '@mui/material';\r\nimport FormSubmitResult from '../FormSubmitResult';\r\n\r\nconst disableSubkey2 = (formData, index) => {\r\n    return formData.disableAllSubkey2Rule || formData.listChild[index].disableSubkey2Rule;\r\n};\r\n\r\nconst rules = [\r\n    { path: 'child1', ruleSet: ['required'] },\r\n    { path: 'child2', ruleSet: ['required'] },\r\n    { path: 'child3.subchild1', ruleSet: ['required'] },\r\n    { path: 'child3.subchild2', ruleSet: ['required'] },\r\n    {\r\n        listPath: 'listChild',\r\n        subRules: [\r\n            {\r\n                path: 'subkey1',\r\n                ruleSet: ['required', { rule: 'length', greaterThan: 3 }],\r\n            },\r\n            {\r\n                path: 'subkey2',\r\n                ruleSet: [\r\n                    {\r\n                        rule: 'required',\r\n                        disableIf: disableSubkey2,\r\n                    },\r\n                    {\r\n                        rule: 'number',\r\n                        greaterThan: 5,\r\n                        disableIf: disableSubkey2,\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n        dependantPaths: ['disableAllSubkey2Rule'],\r\n    },\r\n    {\r\n        path: 'listChild',\r\n        ruleSet: [\r\n            { rule: 'required', customMessage: 'This list should not be empty' },\r\n            { rule: 'listSize', greaterThan: 2 },\r\n        ],\r\n        elementId: 'listErrorFocusElement',\r\n    },\r\n    { path: 'bottomElement1', ruleSet: ['required'] },\r\n    { path: 'bottomElement2', ruleSet: [{ rule: 'length', greaterThan: 3, applyToNulls: true }] },\r\n    { path: 'subComponentElement1', ruleSet: ['required'] },\r\n    { path: 'subComponentElement2', ruleSet: ['required'] },\r\n];\r\n\r\nconst AdvancedValidateComplexForms = () => {\r\n    const [\r\n        isValid,\r\n        validationError,\r\n        formData,\r\n        { setPathValue, setFormIsSubmitted, setPathIsBlurred },\r\n    ] = useValidatableForm({\r\n        rules,\r\n        hideBeforeSubmit: true,\r\n        showAfterBlur: true,\r\n        focusToErrorAfterSubmit: true,\r\n    });\r\n    const [nextId, setNextId] = useState(1);\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n    const handleFormSubmit = () => {\r\n        const submitResultValid = setFormIsSubmitted();\r\n        if (submitResultValid) {\r\n            setDialogOpen(true);\r\n        }\r\n    };\r\n\r\n    const handleAddElement = () => {\r\n        const newListChild = formData.listChild ? [...formData.listChild] : [];\r\n        newListChild.push({ id: nextId });\r\n        setNextId(nextId + 1);\r\n        setPathValue('listChild', newListChild);\r\n    };\r\n\r\n    const handleDeleteElement = (id) => {\r\n        const newListChild = formData.listChild.filter((el) => el.id !== id);\r\n        setPathValue('listChild', newListChild);\r\n    };\r\n\r\n    let listChildJsx = null;\r\n\r\n    if (formData.listChild && formData.listChild.length > 0) {\r\n        listChildJsx = formData.listChild.map((lc, index) => {\r\n            return (\r\n                <div key={lc.id} className=\"formListItem\">\r\n                    <TextField\r\n                        error={!!get(validationError, `listChild{${index}}.subkey1`)}\r\n                        helperText={get(validationError, `listChild{${index}}.subkey1`) || ' '}\r\n                        label=\"lengthGreaterThan3\"\r\n                        type=\"text\"\r\n                        value={get(formData, `listChild[${index}].subkey1`) || ''}\r\n                        onChange={(e) => setPathValue(`listChild[${index}].subkey1`, e.target.value)}\r\n                        onBlur={() => setPathIsBlurred(`listChild{${index}}.subkey1`)}\r\n                        id={`listChild{${index}}.subkey1`}\r\n                    />\r\n                    <TextField\r\n                        error={!!get(validationError, `listChild{${index}}.subkey2`)}\r\n                        helperText={get(validationError, `listChild{${index}}.subkey2`) || ' '}\r\n                        label=\"numberGreaterThan5\"\r\n                        type=\"number\"\r\n                        value={get(formData, `listChild[${index}].subkey2`) || ''}\r\n                        onChange={(e) => setPathValue(`listChild[${index}].subkey2`, e.target.value)}\r\n                        onBlur={() => setPathIsBlurred(`listChild{${index}}.subkey2`)}\r\n                        id={`listChild{${index}}.subkey2`}\r\n                    />\r\n                    disable\r\n                    {\r\n                        <Checkbox\r\n                            checked={get(formData, `listChild[${index}].disableSubkey2Rule`) || false}\r\n                            onChange={(e) => setPathValue(`listChild[${index}].disableSubkey2Rule`, e.target.checked)}\r\n                        />\r\n                    }\r\n                    <Button className=\"myDeleteButton\" variant=\"contained\" onClick={() => handleDeleteElement(lc.id)}>\r\n                        <span className=\"myShinkableButtonSpan\">Delete Element</span>\r\n                        <DeleteIcon className=\"myShinkableButtonIcon\" />\r\n                    </Button>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    return (\r\n        <ExampleUsageWrapper\r\n            header=\"Validate Complex Forms\"\r\n            codeUrl={[\r\n                'components/advanced/AdvancedValidateComplexForms.js',\r\n                'components/advanced/AdvancedSubComponent.js',\r\n            ]}\r\n        >\r\n            <div>\r\n                <div className={'formField'}>\r\n                    <TextField\r\n                        error={!!get(validationError, 'child1')}\r\n                        helperText={get(validationError, 'child1') || ' '}\r\n                        label=\"child1\"\r\n                        type=\"text\"\r\n                        value={get(formData, 'child1') || ''}\r\n                        onChange={(e) => setPathValue('child1', e.target.value)}\r\n                        onBlur={() => setPathIsBlurred('child1')}\r\n                        id=\"child1\"\r\n                    />\r\n                    <TextField\r\n                        error={!!get(validationError, 'child2')}\r\n                        helperText={get(validationError, 'child2') || ' '}\r\n                        label=\"child2\"\r\n                        type=\"text\"\r\n                        value={get(formData, 'child2') || ''}\r\n                        onChange={(e) => setPathValue('child2', e.target.value)}\r\n                        onBlur={() => setPathIsBlurred('child2')}\r\n                        id=\"child2\"\r\n                    />\r\n                    <TextField\r\n                        error={!!get(validationError, 'child3.subchild1')}\r\n                        helperText={get(validationError, 'child3.subchild1') || ' '}\r\n                        label=\"child3.subchild1\"\r\n                        type=\"text\"\r\n                        value={get(formData, 'child3.subchild1') || ''}\r\n                        onChange={(e) => setPathValue('child3.subchild1', e.target.value)}\r\n                        onBlur={() => setPathIsBlurred('child3.subchild1')}\r\n                        id=\"child3.subchild1\"\r\n                    />\r\n                    <TextField\r\n                        error={!!get(validationError, 'child3.subchild2')}\r\n                        helperText={get(validationError, 'child3.subchild2') || ' '}\r\n                        label=\"child3.subchild2\"\r\n                        type=\"text\"\r\n                        value={get(formData, 'child3.subchild2') || ''}\r\n                        onChange={(e) => setPathValue('child3.subchild2', e.target.value)}\r\n                        onBlur={() => setPathIsBlurred('child3.subchild2')}\r\n                        id=\"child3.subchild2\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Button\r\n                        className=\"myAddButton\"\r\n                        variant=\"contained\"\r\n                        onClick={() => handleAddElement()}\r\n                        id={'listErrorFocusElement'}\r\n                    >\r\n                        <span className=\"myShinkableButtonSpan\">Add New Element</span>\r\n                        <AddIcon className=\"myShinkableButtonIcon\" />\r\n                    </Button>\r\n                    <span style={{ marginLeft: 10 }}>disable all subkey2 rows</span>\r\n                    {\r\n                        <Checkbox\r\n                            checked={get(formData, `disableAllSubkey2Rule`) || false}\r\n                            onChange={(e) => setPathValue(`disableAllSubkey2Rule`, e.target.checked)}\r\n                        />\r\n                    }\r\n                </div>\r\n                <div className={'formListField'}>{listChildJsx}</div>\r\n                <div className={'errorInfoText'}>{get(validationError, 'listChild')}</div>\r\n                <div className={'formField'}>\r\n                    <TextField\r\n                        error={!!get(validationError, 'bottomElement1')}\r\n                        helperText={get(validationError, 'bottomElement1') || ' '}\r\n                        label=\"bottomElement1\"\r\n                        type=\"text\"\r\n                        value={get(formData, 'bottomElement1') || ''}\r\n                        onChange={(e) => setPathValue('bottomElement1', e.target.value)}\r\n                        onBlur={() => setPathIsBlurred('bottomElement1')}\r\n                        id=\"bottomElement1\"\r\n                    />\r\n                    <TextField\r\n                        error={!!get(validationError, 'bottomElement2')}\r\n                        helperText={get(validationError, 'bottomElement2') || ' '}\r\n                        label=\"bottomElement2\"\r\n                        type=\"text\"\r\n                        value={get(formData, 'bottomElement2') || ''}\r\n                        onChange={(e) => setPathValue('bottomElement2', e.target.value)}\r\n                        onBlur={() => setPathIsBlurred('bottomElement2')}\r\n                        id=\"bottomElement2\"\r\n                    />\r\n                </div>\r\n                <AdvancedSubComponent\r\n                    validationError={validationError}\r\n                    formData={formData}\r\n                    setPathValue={setPathValue}\r\n                    setPathIsBlurred={setPathIsBlurred}\r\n                />\r\n                <div>\r\n                    <Button className=\"mySubmitButton\" variant=\"contained\" onClick={() => handleFormSubmit()}>\r\n                        Submit Form\r\n                    </Button>\r\n                </div>\r\n                <ValidationResult isValid={isValid} />\r\n                <CurrentRulesInfo currentRules={rules} />\r\n            </div>\r\n            <Dialog open={dialogOpen} onClose={() => setDialogOpen(false)}>\r\n                <DialogTitle>Form Data Submitted</DialogTitle>\r\n                <FormSubmitResult formData={formData} />\r\n            </Dialog>\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default AdvancedValidateComplexForms;\r\n","import { useState } from 'react';\r\nimport { useValidatableForm } from 'react-validatable-form';\r\nimport get from 'lodash.get';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport ValidationResult from '../ValidationResult';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\nimport { Dialog, DialogTitle } from '@mui/material';\r\nimport FormSubmitResult from '../FormSubmitResult';\r\n\r\nconst rules = [\r\n    { path: 'listChild', ruleSet: ['required', { rule: 'listSize', greaterThan: 2 }] },\r\n    {\r\n        listPath: 'listChild',\r\n        ruleSet: ['required', { rule: 'length', greaterThan: 3 }],\r\n    },\r\n];\r\n\r\nconst AdvancedValidateLists = () => {\r\n    const [isValid, validationError, formData, { setPathValue, setFormIsSubmitted }] = useValidatableForm({\r\n        rules,\r\n        initialFormData: { listChild: [''] },\r\n    });\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n    const handleFormSubmit = () => {\r\n        const submitResultValid = setFormIsSubmitted();\r\n        if (submitResultValid) {\r\n            setDialogOpen(true);\r\n        }\r\n    };\r\n\r\n    let listChildJsx = null;\r\n\r\n    const handleAddElement = () => {\r\n        const newListChild = [...formData.listChild];\r\n        newListChild.push('');\r\n        setPathValue('listChild', newListChild);\r\n    };\r\n\r\n    const handleDeleteElement = (index) => {\r\n        const newListChild = formData.listChild.filter((el, ind) => ind !== index);\r\n        setPathValue('listChild', newListChild);\r\n    };\r\n\r\n    if (formData.listChild && formData.listChild.length > 0) {\r\n        listChildJsx = formData.listChild.map((lc, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <TextField\r\n                        error={!!get(validationError, `listChild{${index}}`)}\r\n                        helperText={get(validationError, `listChild{${index}}`) || ' '}\r\n                        label=\"lengthGreaterThan3\"\r\n                        type=\"text\"\r\n                        value={get(formData, `listChild[${index}]`) || ''}\r\n                        onChange={(e) => setPathValue(`listChild[${index}]`, e.target.value)}\r\n                    />\r\n                    <Button className=\"myDeleteButton\" variant=\"contained\" onClick={() => handleDeleteElement(index)}>\r\n                        <span className=\"myShinkableButtonSpan\">Delete Element</span>\r\n                        <DeleteIcon className=\"myShinkableButtonIcon\" />\r\n                    </Button>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    return (\r\n        <ExampleUsageWrapper header=\"Validate Lists\" codeUrl=\"components/advanced/AdvancedValidateLists.js\">\r\n            <div>\r\n                <div>\r\n                    <Button className=\"myAddButton\" variant=\"contained\" onClick={() => handleAddElement()}>\r\n                        <span className=\"myShinkableButtonSpan\">Add New Element</span>\r\n                        <AddIcon className=\"myShinkableButtonIcon\" />\r\n                    </Button>\r\n                </div>\r\n                <div className={'formListField'}>{listChildJsx}</div>\r\n                <div className={'errorInfoText'}>{get(validationError, 'listChild')}</div>\r\n                <div>\r\n                    <Button className=\"mySubmitButton\" variant=\"contained\" onClick={() => handleFormSubmit()}>\r\n                        Submit Form\r\n                    </Button>\r\n                </div>\r\n                <ValidationResult isValid={isValid} />\r\n                <CurrentRulesInfo currentRules={rules} />\r\n            </div>\r\n            <Dialog open={dialogOpen} onClose={() => setDialogOpen(false)}>\r\n                <DialogTitle>Form Data Submitted</DialogTitle>\r\n                <FormSubmitResult formData={formData} />\r\n            </Dialog>\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default AdvancedValidateLists;\r\n","import { useValidatableForm } from 'react-validatable-form';\r\nimport get from 'lodash.get';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport TextField from '@mui/material/TextField';\r\nimport ValidationResult from '../ValidationResult';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\n\r\nconst initialFormData = {};\r\n\r\nconst rules = [\r\n    {\r\n        path: 'val1',\r\n        ruleSet: [\r\n            {\r\n                rule: 'required',\r\n                disableIf: (formData) => formData['disableVal1Rule'],\r\n            },\r\n        ],\r\n        dependantPaths: ['disableVal1Rule'],\r\n    },\r\n    {\r\n        path: 'val2',\r\n        ruleSet: [\r\n            {\r\n                rule: 'required',\r\n                enableIf: (formData) => formData['enableVal2Rule'],\r\n            },\r\n        ],\r\n        dependantPaths: ['enableVal2Rule'],\r\n    },\r\n];\r\n\r\nconst CustomConditionalRules = () => {\r\n    const [isValid, validationError, formData, { setPathValue }] = useValidatableForm({\r\n        rules,\r\n        initialFormData,\r\n    });\r\n\r\n    return (\r\n        <ExampleUsageWrapper\r\n            header=\"disableIf & enableIf\"\r\n            codeUrl={'components/customizations/CustomConditionalRules.js'}\r\n        >\r\n            <div>\r\n                <div className={'textAndCheckboxDiv'}>\r\n                    <TextField\r\n                        error={!!get(validationError, 'val1')}\r\n                        helperText={get(validationError, 'val1') || ' '}\r\n                        label=\"val1\"\r\n                        type=\"text\"\r\n                        value={get(formData, 'val1') || ''}\r\n                        onChange={(e) => setPathValue('val1', e.target.value)}\r\n                    />\r\n                    <FormGroup className={'checkboxOnRight'}>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={get(formData, 'disableVal1Rule') || false}\r\n                                    onChange={(e) => setPathValue('disableVal1Rule', e.target.checked)}\r\n                                />\r\n                            }\r\n                            label=\"Disable val1 Rule\"\r\n                        />\r\n                    </FormGroup>\r\n                </div>\r\n                <div className={'textAndCheckboxDiv'}>\r\n                    <TextField\r\n                        error={!!get(validationError, 'val2')}\r\n                        helperText={get(validationError, 'val2') || ' '}\r\n                        label=\"val2\"\r\n                        type=\"text\"\r\n                        value={get(formData, 'val2') || ''}\r\n                        onChange={(e) => setPathValue('val2', e.target.value)}\r\n                    />\r\n                    <FormGroup className={'checkboxOnRight'}>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={get(formData, 'enableVal2Rule') || false}\r\n                                    onChange={(e) => setPathValue('enableVal2Rule', e.target.checked)}\r\n                                />\r\n                            }\r\n                            label=\"Enable val2 Rule\"\r\n                        />\r\n                    </FormGroup>\r\n                </div>\r\n                <ValidationResult isValid={isValid} />\r\n                <CurrentRulesInfo currentRules={rules} />\r\n            </div>\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default CustomConditionalRules;\r\n","import { useValidatableForm } from 'react-validatable-form';\r\nimport get from 'lodash.get';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport TextField from '@mui/material/TextField';\r\nimport ValidationResult from '../ValidationResult';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\n\r\nconst initialFormData = {\r\n    val: 'ab',\r\n    val2: 'a1',\r\n};\r\n\r\nconst rules = [\r\n    { path: 'val', ruleSet: [{ rule: 'required' }, { rule: 'regex', regex: /ab+c/ }] },\r\n    { path: 'val2', ruleSet: [{ rule: 'required' }, { rule: 'regex', regex: /\\D\\d\\D/ }] },\r\n];\r\n\r\nconst RuleRegex = () => {\r\n    const [isValid, validationError, formData, { setPathValue }] = useValidatableForm({\r\n        rules,\r\n        initialFormData,\r\n    });\r\n\r\n    return (\r\n        <ExampleUsageWrapper header=\"regex\" codeUrl=\"components/rules/RuleRegex.js\">\r\n            <div>\r\n                <TextField\r\n                    error={!!get(validationError, 'val')}\r\n                    helperText={get(validationError, 'val') || ' '}\r\n                    label=\"val\"\r\n                    type=\"text\"\r\n                    value={get(formData, 'val') || ''}\r\n                    onChange={(e) => setPathValue('val', e.target.value)}\r\n                />\r\n                <span className=\"regexInfo\">regex: /ab+c/</span>\r\n            </div>\r\n            <div>\r\n                <TextField\r\n                    error={!!get(validationError, 'val2')}\r\n                    helperText={get(validationError, 'val2') || ' '}\r\n                    label=\"val2\"\r\n                    type=\"text\"\r\n                    value={get(formData, 'val2') || ''}\r\n                    onChange={(e) => setPathValue('val2', e.target.value)}\r\n                />\r\n                <span className=\"regexInfo\">regex: /\\D\\d\\D/</span>\r\n            </div>\r\n            <ValidationResult isValid={isValid} />\r\n            <CurrentRulesInfo currentRules={rules} />\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default RuleRegex;\r\n","import { useState } from 'react';\r\nimport { useValidatableForm } from 'react-validatable-form';\r\nimport get from 'lodash.get';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport ValidationResult from '../ValidationResult';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\nimport { Dialog, DialogTitle } from '@mui/material';\r\nimport FormSubmitResult from '../FormSubmitResult';\r\n\r\nconst rules = [\r\n    {\r\n        listPath: 'listChild',\r\n        ruleSet: ['required', { rule: 'length', greaterThan: 3 }],\r\n    },\r\n    {\r\n        path: 'listChild',\r\n        ruleSet: ['required', { rule: 'listSize', greaterThan: 2 }],\r\n        elementId: 'listErrorFocusElement',\r\n    },\r\n];\r\n\r\nconst AdvancedFocusToErrorOnListAfterSubmit = () => {\r\n    const [\r\n        isValid,\r\n        validationError,\r\n        formData,\r\n        { setPathValue, setFormIsSubmitted, setPathIsBlurred },\r\n    ] = useValidatableForm({\r\n        rules,\r\n        initialFormData: { listChild: [''] },\r\n        hideBeforeSubmit: true,\r\n        showAfterBlur: true,\r\n        focusToErrorAfterSubmit: true,\r\n    });\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n    const handleFormSubmit = () => {\r\n        const submitResultValid = setFormIsSubmitted();\r\n        if (submitResultValid) {\r\n            setDialogOpen(true);\r\n        }\r\n    };\r\n\r\n    let listChildJsx = null;\r\n\r\n    const handleAddElement = () => {\r\n        const newListChild = [...formData.listChild];\r\n        newListChild.push('');\r\n        setPathValue('listChild', newListChild);\r\n    };\r\n\r\n    const handleDeleteElement = (index) => {\r\n        const newListChild = formData.listChild.filter((el, ind) => ind !== index);\r\n        setPathValue('listChild', newListChild);\r\n    };\r\n\r\n    if (formData.listChild && formData.listChild.length > 0) {\r\n        listChildJsx = formData.listChild.map((lc, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <TextField\r\n                        error={!!get(validationError, `listChild{${index}}`)}\r\n                        helperText={get(validationError, `listChild{${index}}`) || ' '}\r\n                        label=\"lengthGreaterThan3\"\r\n                        type=\"text\"\r\n                        value={get(formData, `listChild[${index}]`) || ''}\r\n                        onChange={(e) => setPathValue(`listChild[${index}]`, e.target.value)}\r\n                        onBlur={() => setPathIsBlurred(`listChild{${index}}`)}\r\n                        id={`listChild{${index}}`}\r\n                    />\r\n                    <Button className=\"myDeleteButton\" variant=\"contained\" onClick={() => handleDeleteElement(index)}>\r\n                        <span className=\"myShinkableButtonSpan\">Delete Element</span>\r\n                        <DeleteIcon className=\"myShinkableButtonIcon\" />\r\n                    </Button>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    return (\r\n        <ExampleUsageWrapper\r\n            header=\"focusToErrorAfterSubmit on Lists\"\r\n            codeUrl=\"components/advanced/AdvancedFocusToErrorOnListAfterSubmit.js\"\r\n        >\r\n            <div>\r\n                <div>\r\n                    <Button\r\n                        className=\"myAddButton\"\r\n                        variant=\"contained\"\r\n                        onClick={() => handleAddElement()}\r\n                        id={'listErrorFocusElement'}\r\n                    >\r\n                        <span className=\"myShinkableButtonSpan\">Add New Element</span>\r\n                        <AddIcon className=\"myShinkableButtonIcon\" />\r\n                    </Button>\r\n                </div>\r\n                <div className={'formListField'}>{listChildJsx}</div>\r\n                <div className={'errorInfoText'}>{get(validationError, 'listChild')}</div>\r\n                <div>\r\n                    <Button className=\"mySubmitButton\" variant=\"contained\" onClick={() => handleFormSubmit()}>\r\n                        Submit Form\r\n                    </Button>\r\n                </div>\r\n                <ValidationResult isValid={isValid} />\r\n                <CurrentRulesInfo currentRules={rules} />\r\n            </div>\r\n            <Dialog open={dialogOpen} onClose={() => setDialogOpen(false)}>\r\n                <DialogTitle>Form Data Submitted</DialogTitle>\r\n                <FormSubmitResult formData={formData} />\r\n            </Dialog>\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default AdvancedFocusToErrorOnListAfterSubmit;\r\n","import { useState } from 'react';\r\nimport { useValidatableForm } from 'react-validatable-form';\r\nimport get from 'lodash.get';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport ValidationResult from '../ValidationResult';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\nimport { Dialog, DialogTitle } from '@mui/material';\r\nimport FormSubmitResult from '../FormSubmitResult';\r\n\r\nconst disableSubkey2 = (formData, index) => {\r\n    return formData.disableAllSubkey2Rule || formData.listChild[index].disableSubkey2Rule;\r\n};\r\n\r\nconst rules = [\r\n    {\r\n        listPath: 'listChild',\r\n        subRules: [\r\n            {\r\n                path: 'subkey1',\r\n                ruleSet: ['required', { rule: 'length', greaterThan: 3 }],\r\n            },\r\n            {\r\n                path: 'subkey2',\r\n                ruleSet: [\r\n                    {\r\n                        rule: 'required',\r\n                        disableIf: disableSubkey2,\r\n                    },\r\n                    {\r\n                        rule: 'number',\r\n                        greaterThan: 5,\r\n                        disableIf: disableSubkey2,\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                path: 'subkey3',\r\n                ruleSet: ['required'],\r\n                elementId: 'subkey3ElementId',\r\n            },\r\n        ],\r\n        dependantPaths: ['disableAllSubkey2Rule'],\r\n    },\r\n    {\r\n        path: 'listChild',\r\n        ruleSet: ['required', { rule: 'listSize', greaterThan: 2 }],\r\n        elementId: 'listErrorFocusElement',\r\n    },\r\n];\r\n\r\nconst AdvancedValidateListOfObjects = () => {\r\n    const [\r\n        isValid,\r\n        validationError,\r\n        formData,\r\n        { setPathValue, setFormIsSubmitted, setPathIsBlurred },\r\n    ] = useValidatableForm({\r\n        rules,\r\n        initialFormData: { listChild: [{ id: 1 }] },\r\n        hideBeforeSubmit: true,\r\n        showAfterBlur: true,\r\n        focusToErrorAfterSubmit: true,\r\n    });\r\n    const [nextId, setNextId] = useState(2);\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n    const handleFormSubmit = () => {\r\n        const submitResultValid = setFormIsSubmitted();\r\n        if (submitResultValid) {\r\n            setDialogOpen(true);\r\n        }\r\n    };\r\n\r\n    let listChildJsx = null;\r\n\r\n    const handleAddElement = () => {\r\n        const newListChild = [...formData.listChild];\r\n        newListChild.push({ id: nextId });\r\n        setNextId(nextId + 1);\r\n        setPathValue('listChild', newListChild);\r\n    };\r\n\r\n    const handleDeleteElement = (id) => {\r\n        const newListChild = formData.listChild.filter((el) => el.id !== id);\r\n        setPathValue('listChild', newListChild);\r\n    };\r\n\r\n    if (formData.listChild && formData.listChild.length > 0) {\r\n        listChildJsx = formData.listChild.map((lc, index) => {\r\n            return (\r\n                <div key={lc.id} className=\"formListItem\">\r\n                    <TextField\r\n                        style={{ width: 200 }}\r\n                        error={!!get(validationError, `listChild{${index}}.subkey1`)}\r\n                        helperText={get(validationError, `listChild{${index}}.subkey1`) || ' '}\r\n                        label=\"lengthGreaterThan3\"\r\n                        type=\"text\"\r\n                        value={get(formData, `listChild[${index}].subkey1`) || ''}\r\n                        onChange={(e) => setPathValue(`listChild[${index}].subkey1`, e.target.value)}\r\n                        onBlur={() => setPathIsBlurred(`listChild{${index}}.subkey1`)}\r\n                        id={`listChild{${index}}.subkey1`}\r\n                    />\r\n                    <TextField\r\n                        style={{ width: 200 }}\r\n                        error={!!get(validationError, `listChild{${index}}.subkey2`)}\r\n                        helperText={get(validationError, `listChild{${index}}.subkey2`) || ' '}\r\n                        label=\"numberGreaterThan5\"\r\n                        type=\"number\"\r\n                        value={get(formData, `listChild[${index}].subkey2`) || ''}\r\n                        onChange={(e) => setPathValue(`listChild[${index}].subkey2`, e.target.value)}\r\n                        onBlur={() => setPathIsBlurred(`listChild{${index}}.subkey2`)}\r\n                        id={`listChild{${index}}.subkey2`}\r\n                    />\r\n                    disable\r\n                    {\r\n                        <Checkbox\r\n                            checked={get(formData, `listChild[${index}].disableSubkey2Rule`) || false}\r\n                            onChange={(e) => setPathValue(`listChild[${index}].disableSubkey2Rule`, e.target.checked)}\r\n                        />\r\n                    }\r\n                    <TextField\r\n                        style={{ width: 200 }}\r\n                        error={!!get(validationError, `listChild{${index}}.subkey3`)}\r\n                        helperText={get(validationError, `listChild{${index}}.subkey3`) || ' '}\r\n                        label=\"required\"\r\n                        type=\"text\"\r\n                        value={get(formData, `listChild[${index}].subkey3`) || ''}\r\n                        onChange={(e) => setPathValue(`listChild[${index}].subkey3`, e.target.value)}\r\n                        onBlur={() => setPathIsBlurred(`listChild{${index}}.subkey3`)}\r\n                        id={`listChild{${index}}.subkey3ElementId`}\r\n                    />\r\n                    <Button className=\"myDeleteButton\" variant=\"contained\" onClick={() => handleDeleteElement(lc.id)}>\r\n                        <span className=\"myShinkableButtonSpan\">Delete Element</span>\r\n                        <DeleteIcon className=\"myShinkableButtonIcon\" />\r\n                    </Button>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    return (\r\n        <ExampleUsageWrapper\r\n            header=\"Validate List of Objects\"\r\n            codeUrl=\"components/advanced/AdvancedValidateListOfObjects.js\"\r\n        >\r\n            <div>\r\n                <div>\r\n                    <Button\r\n                        className=\"myAddButton\"\r\n                        variant=\"contained\"\r\n                        onClick={() => handleAddElement()}\r\n                        id={'listErrorFocusElement'}\r\n                    >\r\n                        <span className=\"myShinkableButtonSpan\">Add New Element</span>\r\n                        <AddIcon className=\"myShinkableButtonIcon\" />\r\n                    </Button>\r\n                    <span style={{ marginLeft: 10 }}>disable all subkey2 rows</span>\r\n                    {\r\n                        <Checkbox\r\n                            checked={get(formData, `disableAllSubkey2Rule`) || false}\r\n                            onChange={(e) => setPathValue(`disableAllSubkey2Rule`, e.target.checked)}\r\n                        />\r\n                    }\r\n                </div>\r\n                <div className={'formListField'}>{listChildJsx}</div>\r\n                <div className={'errorInfoText'}>{get(validationError, 'listChild')}</div>\r\n                <div>\r\n                    <Button className=\"mySubmitButton\" variant=\"contained\" onClick={() => handleFormSubmit()}>\r\n                        Submit Form\r\n                    </Button>\r\n                </div>\r\n                <ValidationResult isValid={isValid} />\r\n                <CurrentRulesInfo currentRules={rules} />\r\n            </div>\r\n            <Dialog open={dialogOpen} onClose={() => setDialogOpen(false)}>\r\n                <DialogTitle>Form Data Submitted</DialogTitle>\r\n                <FormSubmitResult formData={formData} />\r\n            </Dialog>\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default AdvancedValidateListOfObjects;\r\n","import ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport './Installation.css';\r\n\r\nconst npmCommandHeader = '// with npm';\r\nconst npmCommand = 'npm install react-validatable-form';\r\nconst yarnCommandHeader = '// with yarn';\r\nconst yarnCommand = 'yarn add react-validatable-form';\r\n\r\nconst Installation = () => {\r\n    return (\r\n        <ExampleUsageWrapper header=\"Installation\">\r\n            <div className=\"outsideUrlSpan\">\r\n                <a href={'https://www.npmjs.com/package/react-validatable-form'} target=\"_blank\" rel=\"noreferrer\">\r\n                    View on npmjs\r\n                </a>\r\n            </div>\r\n\r\n            <div className=\"outsideUrlSpan\">\r\n                <a href={'https://github.com/obss/react-validatable-form'} target=\"_blank\" rel=\"noreferrer\">\r\n                    View on GitHub\r\n                </a>\r\n            </div>\r\n\r\n            <div className=\"commandBox\">\r\n                <p>{npmCommandHeader}</p>\r\n                <p className=\"commandText\">{npmCommand}</p>\r\n            </div>\r\n            <div className=\"commandBox\">\r\n                <p>{yarnCommandHeader}</p>\r\n                <p className=\"commandText\">{yarnCommand}</p>\r\n            </div>\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default Installation;\r\n","import { Link } from 'react-router-dom';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport './Usage.css';\r\n\r\nconst Usage = () => {\r\n    const providerCode = `import { ReactValidatableFormProvider } from 'react-validatable-form';\r\n\r\n    //....\r\n    return <ReactValidatableFormProvider>\r\n                <App />\r\n        </ReactValidatableFormProvider>;\r\n    `;\r\n\r\n    const hookCode = `import { useValidatableForm } from 'react-validatable-form';\r\nimport get from 'lodash.get';\r\nimport TextField from '@mui/material/TextField';\r\n\r\n//....\r\n    \r\nconst initialFormData = {};\r\nconst rules = [{ path: 'val', ruleSet: [{ rule: 'required' }] }];\r\n\r\n//....\r\n\r\n    const [isValid, validationError, formData, { setPathValue }] = useValidatableForm({\r\n        rules,\r\n        initialFormData,\r\n    });\r\n\r\n    return <TextField\r\n        error={!!get(validationError, 'val')}\r\n        helperText={get(validationError, 'val') || ' '}\r\n        label=\"val\"\r\n        type=\"text\"\r\n        value={get(formData, 'val') || ''}\r\n        onChange={(e) => setPathValue('val', e.target.value)}\r\n    />;\r\n    `;\r\n\r\n    return (\r\n        <ExampleUsageWrapper header=\"Usage\">\r\n            <div className=\"codeHeader\">\r\n                Example Usage of ReactValidatableFormProvider:{' '}\r\n                <Link className=\"inner-link\" to=\"/api/react-validatable-form-provider\">\r\n                    See API\r\n                </Link>\r\n            </div>\r\n            <div className=\"codeBox\">\r\n                <span>{providerCode}</span>\r\n            </div>\r\n            <div className=\"codeHeader\">\r\n                Example Usage of useValidatableForm Hook:{' '}\r\n                <Link className=\"inner-link\" to=\"/api/use-validatable-form\">\r\n                    See API\r\n                </Link>\r\n            </div>\r\n            <div className=\"codeBox\">\r\n                <span>{hookCode}</span>\r\n            </div>\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default Usage;\r\n","import { useValidatableForm } from 'react-validatable-form';\r\nimport get from 'lodash.get';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Autocomplete, Button } from '@mui/material';\r\nimport { DesktopDatePicker } from '@mui/lab';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport ValidationResult from '../ValidationResult';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\nimport { options } from '../../constants/Data';\r\n\r\nconst initialFormData = { listChild: ['', ''] };\r\n\r\nconst rules = [\r\n    { path: 'val1', ruleSet: [{ rule: 'required', applyToNulls: true }] },\r\n    { path: 'val2', ruleSet: [{ rule: 'number', equalTo: 3, applyToNulls: true }] },\r\n    { path: 'val3', ruleSet: [{ rule: 'length', equalTo: 3, applyToNulls: true }] },\r\n    { path: 'val4', ruleSet: [{ rule: 'listSize', equalTo: 3, applyToNulls: true }] },\r\n    { path: 'val5', ruleSet: [{ rule: 'date', applyToNulls: true }] },\r\n    { path: 'val6', ruleSet: [{ rule: 'email', applyToNulls: true }] },\r\n    { path: 'val7', ruleSet: [{ rule: 'url', applyToNulls: true }] },\r\n    { path: 'val8', ruleSet: [{ rule: 'iban', applyToNulls: true }] },\r\n    { path: 'val9', ruleSet: [{ rule: 'equality', equalTo: 'aaa', applyToNulls: true }] },\r\n    { path: 'val10', ruleSet: [{ rule: 'regex', regex: /a/, applyToNulls: true }] },\r\n    {\r\n        listPath: 'listChild',\r\n        ruleSet: [{ rule: 'unique', applyToNulls: true }],\r\n    },\r\n];\r\n\r\nconst CustomApplyToNulls = () => {\r\n    const [isValid, validationError, formData, { setPathValue }] = useValidatableForm({\r\n        rules,\r\n        initialFormData,\r\n    });\r\n\r\n    let listChildJsx = null;\r\n\r\n    const handleAddElement = () => {\r\n        const newListChild = formData.listChild ? [...formData.listChild] : [];\r\n        newListChild.push('');\r\n        setPathValue('listChild', newListChild);\r\n    };\r\n\r\n    const handleDeleteElement = (index) => {\r\n        const newListChild = formData.listChild.filter((el, ind) => ind !== index);\r\n        setPathValue('listChild', newListChild);\r\n    };\r\n\r\n    if (formData.listChild && formData.listChild.length > 0) {\r\n        listChildJsx = formData.listChild.map((lc, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <TextField\r\n                        error={!!get(validationError, `listChild{${index}}`)}\r\n                        helperText={get(validationError, `listChild{${index}}`) || ' '}\r\n                        label=\"unique\"\r\n                        type=\"text\"\r\n                        value={get(formData, `listChild[${index}]`) || ''}\r\n                        onChange={(e) => setPathValue(`listChild[${index}]`, e.target.value)}\r\n                    />\r\n                    <Button className=\"myDeleteButton\" variant=\"contained\" onClick={() => handleDeleteElement(index)}>\r\n                        <span className=\"myShinkableButtonSpan\">Delete Element</span>\r\n                        <DeleteIcon className=\"myShinkableButtonIcon\" />\r\n                    </Button>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    return (\r\n        <ExampleUsageWrapper header=\"applyToNulls\" codeUrl=\"components/customizations/CustomApplyToNulls.js\">\r\n            <div>\r\n                <TextField\r\n                    error={!!get(validationError, 'val1')}\r\n                    helperText={get(validationError, 'val1') || ' '}\r\n                    label=\"requiredApplyToNulls\"\r\n                    type=\"text\"\r\n                    value={get(formData, 'val1') || ''}\r\n                    onChange={(e) => setPathValue('val1', e.target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <TextField\r\n                    error={!!get(validationError, 'val2')}\r\n                    helperText={get(validationError, 'val2') || ' '}\r\n                    label=\"numberApplyToNulls\"\r\n                    type=\"number\"\r\n                    value={get(formData, 'val2') || ''}\r\n                    onChange={(e) => setPathValue('val2', e.target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <TextField\r\n                    error={!!get(validationError, 'val3')}\r\n                    helperText={get(validationError, 'val3') || ' '}\r\n                    label=\"lengthApplyToNulls\"\r\n                    type=\"text\"\r\n                    value={get(formData, 'val3') || ''}\r\n                    onChange={(e) => setPathValue('val3', e.target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Autocomplete\r\n                    multiple\r\n                    value={get(formData, 'val4') || []}\r\n                    onChange={(event, newValue) => {\r\n                        setPathValue('val4', newValue);\r\n                    }}\r\n                    options={options}\r\n                    renderInput={(params) => (\r\n                        <TextField\r\n                            {...params}\r\n                            error={!!get(validationError, 'val4')}\r\n                            helperText={get(validationError, 'val4') || ' '}\r\n                            label=\"listSizeApplyToNulls\"\r\n                        />\r\n                    )}\r\n                />\r\n            </div>\r\n            <div>\r\n                <DesktopDatePicker\r\n                    label=\"dateApplyToNulls\"\r\n                    inputFormat=\"MM/dd/yyyy\"\r\n                    value={get(formData, 'val5') || null}\r\n                    onChange={(val) => setPathValue('val5', val)}\r\n                    renderInput={(params) => (\r\n                        <TextField\r\n                            {...params}\r\n                            error={!!get(validationError, 'val5')}\r\n                            helperText={get(validationError, 'val5') || ' '}\r\n                        />\r\n                    )}\r\n                />\r\n            </div>\r\n            <div>\r\n                <TextField\r\n                    error={!!get(validationError, 'val6')}\r\n                    helperText={get(validationError, 'val6') || ' '}\r\n                    label=\"emailApplyToNulls\"\r\n                    type=\"text\"\r\n                    value={get(formData, 'val6') || ''}\r\n                    onChange={(e) => setPathValue('val6', e.target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <TextField\r\n                    error={!!get(validationError, 'val7')}\r\n                    helperText={get(validationError, 'val7') || ' '}\r\n                    label=\"urlApplyToNulls\"\r\n                    type=\"text\"\r\n                    value={get(formData, 'val7') || ''}\r\n                    onChange={(e) => setPathValue('val7', e.target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <TextField\r\n                    error={!!get(validationError, 'val8')}\r\n                    helperText={get(validationError, 'val8') || ' '}\r\n                    label=\"ibanApplyToNulls\"\r\n                    type=\"text\"\r\n                    value={get(formData, 'val8') || ''}\r\n                    onChange={(e) => setPathValue('val8', e.target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <TextField\r\n                    error={!!get(validationError, 'val9')}\r\n                    helperText={get(validationError, 'val9') || ' '}\r\n                    label=\"equalityApplyToNulls\"\r\n                    type=\"text\"\r\n                    value={get(formData, 'val9') || ''}\r\n                    onChange={(e) => setPathValue('val9', e.target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <TextField\r\n                    error={!!get(validationError, 'val10')}\r\n                    helperText={get(validationError, 'val10') || ' '}\r\n                    label=\"regexApplyToNulls\"\r\n                    type=\"text\"\r\n                    value={get(formData, 'val10') || ''}\r\n                    onChange={(e) => setPathValue('val10', e.target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Button className=\"myAddButton\" variant=\"contained\" onClick={() => handleAddElement()}>\r\n                    <span className=\"myShinkableButtonSpan\">Add New Element</span>\r\n                    <AddIcon className=\"myShinkableButtonIcon\" />\r\n                </Button>\r\n            </div>\r\n            <div className={'formListField'}>{listChildJsx}</div>\r\n            <div className={'errorInfoText'}>{get(validationError, 'listChild')}</div>\r\n\r\n            <ValidationResult isValid={isValid} />\r\n            <CurrentRulesInfo currentRules={rules} />\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default CustomApplyToNulls;\r\n","import { useState } from 'react';\r\nimport { useValidatableForm } from 'react-validatable-form';\r\nimport get from 'lodash.get';\r\nimport './CustomElementFocusHandler.css';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport Button from '@mui/material/Button';\r\nimport ValidationResult from '../ValidationResult';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\nimport { Dialog, DialogTitle } from '@mui/material';\r\nimport FormSubmitResult from '../FormSubmitResult';\r\nimport { options } from '../../constants/Data';\r\n\r\nconst myCustomElementFocusHandler = (elementId) => {\r\n    const element = document.getElementById(elementId);\r\n    if (!element) {\r\n        console.warn(`Dom element with id ${elementId} could not be found`);\r\n    } else {\r\n        const parentElement = element.parentElement;\r\n        const grantParentElement = parentElement.parentElement;\r\n        grantParentElement.classList.add('element-shaking');\r\n        element.focus();\r\n        setTimeout(() => {\r\n            grantParentElement.classList.remove('element-shaking');\r\n        }, 600);\r\n    }\r\n};\r\n\r\nconst rules = [\r\n    { path: 'textVal1', ruleSet: [{ rule: 'required' }] },\r\n    {\r\n        path: 'textVal2',\r\n        ruleSet: [{ rule: 'required' }, { rule: 'length', greaterThanOrEqualTo: 7 }],\r\n    },\r\n    { path: 'val3', ruleSet: [{ rule: 'required' }, { rule: 'listSize', equalTo: 2 }] },\r\n    { path: 'textVal4', ruleSet: [{ rule: 'required' }, { rule: 'url' }] },\r\n];\r\n\r\nconst CustomElementFocusHandler = () => {\r\n    const [\r\n        isValid,\r\n        validationError,\r\n        formData,\r\n        { setPathValue, setFormIsSubmitted, setPathIsBlurred },\r\n    ] = useValidatableForm({\r\n        rules,\r\n        hideBeforeSubmit: true,\r\n        showAfterBlur: true,\r\n        focusToErrorAfterSubmit: true,\r\n        elementFocusHandler: myCustomElementFocusHandler,\r\n    });\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n    const handleFormSubmit = () => {\r\n        const submitResultValid = setFormIsSubmitted();\r\n        if (submitResultValid) {\r\n            setDialogOpen(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ExampleUsageWrapper\r\n            header=\"elementFocusHandler\"\r\n            codeUrl=\"components/customizations/CustomElementFocusHandler.js\"\r\n        >\r\n            <div>\r\n                <div className={'formField'}>\r\n                    <TextField\r\n                        error={!!get(validationError, 'textVal1')}\r\n                        helperText={get(validationError, 'textVal1') || ' '}\r\n                        label=\"requiredField\"\r\n                        type=\"text\"\r\n                        value={get(formData, 'textVal1') || ''}\r\n                        onChange={(e) => setPathValue('textVal1', e.target.value)}\r\n                        onBlur={() => setPathIsBlurred('textVal1')}\r\n                        id=\"textVal1\"\r\n                    />\r\n                    <TextField\r\n                        error={!!get(validationError, 'textVal2')}\r\n                        helperText={get(validationError, 'textVal2') || ' '}\r\n                        label=\"requiredAndLengthField\"\r\n                        type=\"text\"\r\n                        value={get(formData, 'textVal2') || ''}\r\n                        onChange={(e) => setPathValue('textVal2', e.target.value)}\r\n                        onBlur={() => setPathIsBlurred('textVal2')}\r\n                        id=\"textVal2\"\r\n                    />\r\n                    <Autocomplete\r\n                        multiple\r\n                        value={get(formData, 'val3') || []}\r\n                        onChange={(event, newValue) => {\r\n                            setPathValue('val3', newValue);\r\n                        }}\r\n                        onBlur={() => setPathIsBlurred('val3')}\r\n                        options={options}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                error={!!get(validationError, 'val3')}\r\n                                helperText={get(validationError, 'val3') || ' '}\r\n                                label=\"requiredAndListSize\"\r\n                            />\r\n                        )}\r\n                        id=\"val3\"\r\n                    />\r\n                    <TextField\r\n                        error={!!get(validationError, 'textVal4')}\r\n                        helperText={get(validationError, 'textVal4') || ' '}\r\n                        label=\"requiredAndUrl\"\r\n                        type=\"text\"\r\n                        value={get(formData, 'textVal4') || ''}\r\n                        onChange={(e) => setPathValue('textVal4', e.target.value)}\r\n                        onBlur={() => setPathIsBlurred('textVal4')}\r\n                        id=\"textVal4\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Button className=\"mySubmitButton\" variant=\"contained\" onClick={() => handleFormSubmit()}>\r\n                        Submit Form\r\n                    </Button>\r\n                </div>\r\n                <ValidationResult isValid={isValid} />\r\n                <CurrentRulesInfo currentRules={rules} />\r\n            </div>\r\n            <Dialog open={dialogOpen} onClose={() => setDialogOpen(false)}>\r\n                <DialogTitle>Form Data Submitted</DialogTitle>\r\n                <FormSubmitResult formData={formData} />\r\n            </Dialog>\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default CustomElementFocusHandler;\r\n","import { useValidatableForm } from 'react-validatable-form';\r\nimport get from 'lodash.get';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport ValidationResult from '../ValidationResult';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\nimport { useState } from 'react';\r\n\r\nconst rules = [\r\n    {\r\n        listPath: 'listChild',\r\n        ruleSet: ['required', { rule: 'unique' }],\r\n    },\r\n    {\r\n        listPath: 'listOfObjectsChild',\r\n        subRules: [\r\n            {\r\n                path: 'subkey1',\r\n                ruleSet: ['required', { rule: 'unique' }],\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\nconst RuleUnique = () => {\r\n    const [isValid, validationError, formData, { setPathValue }] = useValidatableForm({\r\n        rules,\r\n        initialFormData: {\r\n            listChild: ['a', 'a'],\r\n            listOfObjectsChild: [\r\n                { id: 1, subkey1: 'b' },\r\n                { id: 2, subkey1: 'b' },\r\n            ],\r\n        },\r\n    });\r\n    const [nextId, setNextId] = useState(3);\r\n\r\n    let listChildJsx = null;\r\n\r\n    const handleAddElement = () => {\r\n        const newListChild = [...formData.listChild];\r\n        newListChild.push('');\r\n        setPathValue('listChild', newListChild);\r\n    };\r\n\r\n    const handleDeleteElement = (index) => {\r\n        const newListChild = formData.listChild.filter((el, ind) => ind !== index);\r\n        setPathValue('listChild', newListChild);\r\n    };\r\n\r\n    if (formData.listChild && formData.listChild.length > 0) {\r\n        listChildJsx = formData.listChild.map((lc, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <TextField\r\n                        error={!!get(validationError, `listChild{${index}}`)}\r\n                        helperText={get(validationError, `listChild{${index}}`) || ' '}\r\n                        label=\"unique\"\r\n                        type=\"text\"\r\n                        value={get(formData, `listChild[${index}]`) || ''}\r\n                        onChange={(e) => setPathValue(`listChild[${index}]`, e.target.value)}\r\n                    />\r\n                    <Button className=\"myDeleteButton\" variant=\"contained\" onClick={() => handleDeleteElement(index)}>\r\n                        <span className=\"myShinkableButtonSpan\">Delete Element</span>\r\n                        <DeleteIcon className=\"myShinkableButtonIcon\" />\r\n                    </Button>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    const handleAddObjectElement = () => {\r\n        const newListOfObjectsChild = [...formData.listOfObjectsChild];\r\n        newListOfObjectsChild.push({ id: nextId });\r\n        setNextId(nextId + 1);\r\n        setPathValue('listOfObjectsChild', newListOfObjectsChild);\r\n    };\r\n\r\n    const handleDeleteObjectElement = (id) => {\r\n        const newListOfObjectsChild = formData.listOfObjectsChild.filter((el) => el.id !== id);\r\n        setPathValue('listOfObjectsChild', newListOfObjectsChild);\r\n    };\r\n\r\n    let listOfObjectsChildJsx = null;\r\n\r\n    if (formData.listOfObjectsChild && formData.listOfObjectsChild.length > 0) {\r\n        listOfObjectsChildJsx = formData.listOfObjectsChild.map((lc, index) => {\r\n            return (\r\n                <div key={lc.id}>\r\n                    <TextField\r\n                        error={!!get(validationError, `listOfObjectsChild{${index}}.subkey1`)}\r\n                        helperText={get(validationError, `listOfObjectsChild{${index}}.subkey1`) || ' '}\r\n                        label=\"unique subkey\"\r\n                        type=\"text\"\r\n                        value={get(formData, `listOfObjectsChild[${index}].subkey1`) || ''}\r\n                        onChange={(e) => setPathValue(`listOfObjectsChild[${index}].subkey1`, e.target.value)}\r\n                        id={`listOfObjectsChild{${index}}.subkey1`}\r\n                    />\r\n                    <Button\r\n                        className=\"myDeleteButton\"\r\n                        variant=\"contained\"\r\n                        onClick={() => handleDeleteObjectElement(lc.id)}\r\n                    >\r\n                        <span className=\"myShinkableButtonSpan\">Delete Element</span>\r\n                        <DeleteIcon className=\"myShinkableButtonIcon\" />\r\n                    </Button>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    return (\r\n        <ExampleUsageWrapper header=\"Unique\" codeUrl=\"components/rules/RuleUnique.js\">\r\n            <div>\r\n                <div>\r\n                    <Button className=\"myAddButton\" variant=\"contained\" onClick={() => handleAddElement()}>\r\n                        <span className=\"myShinkableButtonSpan\">Add New Element</span>\r\n                        <AddIcon className=\"myShinkableButtonIcon\" />\r\n                    </Button>\r\n                </div>\r\n                <div className={'formListField'}>{listChildJsx}</div>\r\n                <div className={'errorInfoText'}>{get(validationError, 'listChild')}</div>\r\n\r\n                <div>\r\n                    <Button className=\"myAddButton\" variant=\"contained\" onClick={() => handleAddObjectElement()}>\r\n                        <span className=\"myShinkableButtonSpan\">Add New Element</span>\r\n                        <AddIcon className=\"myShinkableButtonIcon\" />\r\n                    </Button>\r\n                </div>\r\n                <div className={'formListField'}>{listOfObjectsChildJsx}</div>\r\n                <div className={'errorInfoText'}>{get(validationError, 'listOfObjectsChild')}</div>\r\n                <ValidationResult isValid={isValid} />\r\n                <CurrentRulesInfo currentRules={rules} />\r\n            </div>\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default RuleUnique;\r\n","import { useValidatableForm } from 'react-validatable-form';\r\nimport get from 'lodash.get';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport TextField from '@mui/material/TextField';\r\nimport ValidationResult from '../ValidationResult';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\nimport { Checkbox, FormControl, FormControlLabel, FormGroup, FormHelperText } from '@mui/material';\r\n\r\nconst initialFormData = {\r\n    val: false,\r\n    val2: 'aa',\r\n    comparisonValue: 'aba',\r\n};\r\n\r\nconst rules = [\r\n    { path: 'val', ruleSet: [{ rule: 'required' }, { rule: 'equality', equalTo: true }] },\r\n    {\r\n        path: 'val2',\r\n        ruleSet: [{ rule: 'required' }, { rule: 'equality', equalTo: (formData) => formData['comparisonValue'] }],\r\n        dependantPaths: ['comparisonValue'],\r\n    },\r\n];\r\n\r\nconst RuleEquality = () => {\r\n    const [isValid, validationError, formData, { setPathValue }] = useValidatableForm({\r\n        rules,\r\n        initialFormData,\r\n    });\r\n\r\n    return (\r\n        <ExampleUsageWrapper header=\"equality\" codeUrl=\"components/rules/RuleEquality.js\">\r\n            <div>\r\n                <FormGroup className={'checkboxOnRight'}>\r\n                    <FormControl error={!!get(validationError, 'val')}>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={get(formData, 'val') || false}\r\n                                    onChange={(e) => setPathValue('val', e.target.checked)}\r\n                                />\r\n                            }\r\n                            label={<FormHelperText>{get(validationError, 'val') || ' '}</FormHelperText>}\r\n                        />\r\n                    </FormControl>\r\n                </FormGroup>\r\n            </div>\r\n            <div className=\"comparisonDiv\">\r\n                <TextField\r\n                    error={!!get(validationError, 'val2')}\r\n                    helperText={get(validationError, 'val2') || ' '}\r\n                    label=\"val2\"\r\n                    type=\"text\"\r\n                    value={get(formData, 'val2') || ''}\r\n                    onChange={(e) => setPathValue('val2', e.target.value)}\r\n                />\r\n                <TextField\r\n                    className=\"comparisonComponent\"\r\n                    label=\"comparisonValue\"\r\n                    type=\"text\"\r\n                    value={get(formData, 'comparisonValue')}\r\n                    onChange={(e) => setPathValue('comparisonValue', e.target.value)}\r\n                />\r\n            </div>\r\n            <ValidationResult isValid={isValid} />\r\n            <CurrentRulesInfo currentRules={rules} />\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default RuleEquality;\r\n","import { useState } from 'react';\r\nimport { useValidatableForm } from 'react-validatable-form';\r\nimport get from 'lodash.get';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport ValidationResult from '../ValidationResult';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport { Button } from 'primereact/button';\r\nimport { AutoComplete } from 'primereact/autocomplete';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport FormSubmitResult from '../FormSubmitResult';\r\nimport { options } from '../../constants/Data';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\n\r\nconst rules = [\r\n    { path: 'textVal1', ruleSet: [{ rule: 'required' }] },\r\n    { path: 'textVal2', ruleSet: [{ rule: 'required' }] },\r\n    { path: 'numVal', ruleSet: [{ rule: 'required' }] },\r\n    { path: 'selectVal', ruleSet: [{ rule: 'required' }] },\r\n];\r\n\r\nconst primeReactElementsFocusHandler = (elementId) => {\r\n    const element = document.getElementById(elementId);\r\n    if (!element) {\r\n        console.warn(`Dom element with id ${elementId} could not be found`);\r\n    } else {\r\n        const tagName = element.tagName;\r\n        if (tagName.toUpperCase() === 'INPUT') {\r\n            element.focus();\r\n        } else {\r\n            var inputNodes = element.getElementsByTagName('INPUT');\r\n            for (var i = 0; i < inputNodes.length; ++i) {\r\n                var inputNode = inputNodes[i];\r\n                inputNode.focus();\r\n                return;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nconst ExamplePrimeReact = () => {\r\n    const [\r\n        isValid,\r\n        validationError,\r\n        formData,\r\n        { setPathValue, setFormIsSubmitted, setPathIsBlurred },\r\n    ] = useValidatableForm({\r\n        rules,\r\n        hideBeforeSubmit: true,\r\n        showAfterBlur: true,\r\n        focusToErrorAfterSubmit: true,\r\n        elementFocusHandler: primeReactElementsFocusHandler,\r\n    });\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const [filterVal, setFilterVal] = useState(null);\r\n\r\n    const handleFilter = (ev) => {\r\n        setFilterVal(ev.query);\r\n    };\r\n\r\n    const handleFormSubmit = () => {\r\n        const submitResultValid = setFormIsSubmitted();\r\n        if (submitResultValid) {\r\n            setDialogOpen(true);\r\n        }\r\n    };\r\n\r\n    const filteredOptions = filterVal ? options.filter((o) => o.includes(filterVal)) : [...options];\r\n\r\n    return (\r\n        <ExampleUsageWrapper\r\n            header=\"Example Usage with PrimeReact Components\"\r\n            codeUrl=\"components/examples/ExamplePrimeReact.js\"\r\n        >\r\n            <div>\r\n                <div className=\"my-prime-div\">\r\n                    <label htmlFor=\"textVal1\">Text1</label>\r\n                    <InputText\r\n                        className={get(validationError, 'textVal1') && 'p-invalid'}\r\n                        value={get(formData, 'textVal1') || ''}\r\n                        onChange={(e) => setPathValue('textVal1', e.target.value)}\r\n                        onBlur={() => setPathIsBlurred('textVal1')}\r\n                        id=\"textVal1\"\r\n                    />\r\n                    <small className=\"p-error\">{get(validationError, 'textVal1') || ' '}</small>\r\n                </div>\r\n                <div className=\"my-prime-div\">\r\n                    <label htmlFor=\"textVal2\">Text2</label>\r\n                    <InputText\r\n                        className={get(validationError, 'textVal2') && 'p-invalid'}\r\n                        value={get(formData, 'textVal2') || ''}\r\n                        onChange={(e) => setPathValue('textVal2', e.target.value)}\r\n                        onBlur={() => setPathIsBlurred('textVal2')}\r\n                        id=\"textVal2\"\r\n                    />\r\n                    <small className=\"p-error\">{get(validationError, 'textVal2') || ' '}</small>\r\n                </div>\r\n                <div className=\"my-prime-div\">\r\n                    <label htmlFor=\"numVal\">Num Val</label>\r\n                    <InputNumber\r\n                        className={get(validationError, 'numVal') && 'p-invalid'}\r\n                        value={get(formData, 'numVal') || ''}\r\n                        onChange={(e) => setPathValue('numVal', e.value)}\r\n                        onBlur={() => setPathIsBlurred('numVal')}\r\n                        id=\"numVal\"\r\n                    />\r\n                    <small className=\"p-error\">{get(validationError, 'numVal') || ' '}</small>\r\n                </div>\r\n                <div className=\"my-prime-div\">\r\n                    <label htmlFor=\"selectVal\">Select Val</label>\r\n                    <AutoComplete\r\n                        multiple\r\n                        className={get(validationError, 'selectVal') && 'p-invalid'}\r\n                        value={get(formData, 'selectVal') || []}\r\n                        suggestions={filteredOptions}\r\n                        completeMethod={handleFilter}\r\n                        onChange={(e) => setPathValue('selectVal', e.value)}\r\n                        onBlur={() => setPathIsBlurred('selectVal')}\r\n                        id=\"selectVal\"\r\n                    />\r\n                    <small className=\"p-error\">{get(validationError, 'selectVal') || ' '}</small>\r\n                </div>\r\n                <div>\r\n                    <Button className=\"mySubmitButton\" onClick={() => handleFormSubmit()}>\r\n                        Submit Form\r\n                    </Button>\r\n                </div>\r\n                <ValidationResult isValid={isValid} />\r\n                <CurrentRulesInfo currentRules={rules} />\r\n            </div>\r\n            <Dialog\r\n                header=\"Form Data Submitted\"\r\n                visible={dialogOpen}\r\n                modal\r\n                style={{ width: '50vw' }}\r\n                onHide={() => setDialogOpen(false)}\r\n                onMaskClick={() => setDialogOpen(false)}\r\n                draggable={false}\r\n                resizable={false}\r\n            >\r\n                <FormSubmitResult formData={formData} />\r\n            </Dialog>\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default ExamplePrimeReact;\r\n","import { useState } from 'react';\r\nimport { useValidatableForm } from 'react-validatable-form';\r\nimport get from 'lodash.get';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\nimport ValidationResult from '../ValidationResult';\r\nimport FormSubmitResult from '../FormSubmitResult';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Dialog, DialogTitle } from '@mui/material';\r\nimport { options } from '../../constants/Data';\r\nimport CurrentRulesInfo from '../CurrentRulesInfo';\r\nimport './MyBootstrap.css';\r\n\r\nconst rules = [\r\n    { path: 'textVal1', ruleSet: [{ rule: 'required' }] },\r\n    { path: 'textVal2', ruleSet: [{ rule: 'required' }] },\r\n    { path: 'numVal', ruleSet: [{ rule: 'required' }] },\r\n    { path: 'selectVal', ruleSet: [{ rule: 'required' }] },\r\n];\r\n\r\nconst ExampleReactBootstrap = () => {\r\n    const [\r\n        isValid,\r\n        validationError,\r\n        formData,\r\n        { setPathValue, setFormIsSubmitted, setPathIsBlurred },\r\n    ] = useValidatableForm({\r\n        rules,\r\n        hideBeforeSubmit: true,\r\n        showAfterBlur: true,\r\n        focusToErrorAfterSubmit: true,\r\n    });\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n    const handleFormSubmit = () => {\r\n        const submitResultValid = setFormIsSubmitted();\r\n        if (submitResultValid) {\r\n            setDialogOpen(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ExampleUsageWrapper\r\n            header=\"Example Usage with React-Bootstrap Components\"\r\n            codeUrl=\"components/examples/ExampleReactBootstrap.js\"\r\n        >\r\n            <Form className=\"my-bootstrap-form\">\r\n                <Form.Group controlId=\"textVal1\">\r\n                    <Form.Label>Text1</Form.Label>\r\n                    <Form.Control\r\n                        placeholder=\"Text1\"\r\n                        value={get(formData, 'textVal1') || ''}\r\n                        onBlur={() => setPathIsBlurred('textVal1')}\r\n                        onChange={(e) => setPathValue('textVal1', e.target.value)}\r\n                        isInvalid={!!get(validationError, 'textVal1')}\r\n                    />\r\n                    {get(validationError, 'textVal1') ? (\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {get(validationError, 'textVal1') || ' '}\r\n                        </Form.Control.Feedback>\r\n                    ) : (\r\n                        <div className={'my-bootstrap-empty-feedback'}></div>\r\n                    )}\r\n                </Form.Group>\r\n                <Form.Group controlId=\"textVal2\">\r\n                    <Form.Label>Text2</Form.Label>\r\n                    <Form.Control\r\n                        placeholder=\"Text2\"\r\n                        value={get(formData, 'textVal2') || ''}\r\n                        onBlur={() => setPathIsBlurred('textVal2')}\r\n                        onChange={(e) => setPathValue('textVal2', e.target.value)}\r\n                        isInvalid={!!get(validationError, 'textVal2')}\r\n                    />\r\n                    {get(validationError, 'textVal2') ? (\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {get(validationError, 'textVal2') || ' '}\r\n                        </Form.Control.Feedback>\r\n                    ) : (\r\n                        <div className={'my-bootstrap-empty-feedback'}></div>\r\n                    )}\r\n                </Form.Group>\r\n                <Form.Group controlId=\"numVal\">\r\n                    <Form.Label>Num Val</Form.Label>\r\n                    <Form.Control\r\n                        type=\"number\"\r\n                        placeholder=\"Num Val\"\r\n                        value={get(formData, 'numVal') || ''}\r\n                        onBlur={() => setPathIsBlurred('numVal')}\r\n                        onChange={(e) => setPathValue('numVal', e.target.value)}\r\n                        isInvalid={!!get(validationError, 'numVal')}\r\n                    />\r\n                    {get(validationError, 'numVal') ? (\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {get(validationError, 'numVal') || ' '}\r\n                        </Form.Control.Feedback>\r\n                    ) : (\r\n                        <div className={'my-bootstrap-empty-feedback'}></div>\r\n                    )}\r\n                </Form.Group>\r\n                <Form.Group controlId=\"selectVal\">\r\n                    <Form.Label>Select Val</Form.Label>\r\n                    <Form.Select\r\n                        value={get(formData, 'selectVal') || ''}\r\n                        onBlur={() => setPathIsBlurred('selectVal')}\r\n                        onChange={(e) => setPathValue('selectVal', e.target.value)}\r\n                        isInvalid={!!get(validationError, 'selectVal')}\r\n                    >\r\n                        <option key={'empty'} value={''}>\r\n                            {''}\r\n                        </option>\r\n                        {options.map((op) => {\r\n                            return (\r\n                                <option key={op} value={op}>\r\n                                    {op}\r\n                                </option>\r\n                            );\r\n                        })}\r\n                    </Form.Select>\r\n                    {get(validationError, 'selectVal') ? (\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {get(validationError, 'selectVal') || ' '}\r\n                        </Form.Control.Feedback>\r\n                    ) : (\r\n                        <div className={'my-bootstrap-empty-feedback'}></div>\r\n                    )}\r\n                </Form.Group>\r\n                <Button className=\"mySubmitButton\" variant=\"primary\" type=\"submit\" onClick={() => handleFormSubmit()}>\r\n                    Submit\r\n                </Button>\r\n                <ValidationResult isValid={isValid} />\r\n                <CurrentRulesInfo currentRules={rules} />\r\n            </Form>\r\n            <Dialog open={dialogOpen} onClose={() => setDialogOpen(false)}>\r\n                <DialogTitle>Form Data Submitted</DialogTitle>\r\n                <FormSubmitResult formData={formData} />\r\n            </Dialog>\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default ExampleReactBootstrap;\r\n","import './ApiInfo.css';\r\n\r\nconst ApiInfo = ({ apiInfoList }) => {\r\n    const apiInfoListJsx = apiInfoList.map((api, index) => {\r\n        const apiLabel = api.label;\r\n        const apiDesc = api.desc;\r\n        const apiIndent = api.indent || 0;\r\n        const pLeft = 20 * apiIndent + 10;\r\n        const leftIndentStyle = { paddingLeft: pLeft + 'px' };\r\n        if (apiIndent) {\r\n            leftIndentStyle.borderTop = '1px dashed black';\r\n        }\r\n        return (\r\n            <div key={index} style={leftIndentStyle} className=\"apiInfo\">\r\n                <div className={'apiLabel'}>{apiLabel}</div>\r\n                <div className={'apiDesc'}>{apiDesc}</div>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return <div className={'apiInfoWrapper'}>{apiInfoListJsx}</div>;\r\n};\r\n\r\nexport default ApiInfo;\r\n","import './CodeAccordion.css';\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\nconst CodeAccordion = ({ code }) => {\r\n    return (\r\n        <div className={'codeExampleDiv'}>\r\n            <Accordion>\r\n                <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\r\n                    <span className={'codeExampleLabel'}>Example Source Code</span>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <span className={'codeExample'}>{code}</span>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CodeAccordion;\r\n","import { Link } from 'react-router-dom';\r\nimport ApiInfo from '../ApiInfo';\r\nimport CodeAccordion from '../CodeAccordion';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\n\r\nconst useValidatableFormCode = `const [isValid, validationError, formData, { setPathValue, setFormIsSubmitted, setPathIsBlurred, setFormData, setRules, forceRunAllValidations }] = \r\n    useValidatableForm({\r\n        rules,\r\n        initialFormData,\r\n        hideBeforeSubmit,\r\n        showAfterBlur,\r\n        focusToErrorAfterSubmit,\r\n});`;\r\n\r\nconst hookParametersApiInfoList = [\r\n    {\r\n        label: (\r\n            <div>\r\n                rules (array){' '}\r\n                <Link className=\"inner-link\" to=\"/api/rules\">\r\n                    See rules API\r\n                </Link>\r\n            </div>\r\n        ),\r\n        desc: 'Array of validation rules to be run on current form.',\r\n    },\r\n    {\r\n        label: 'initialFormData (object)',\r\n        desc: 'Initial form data to set default values of current form.',\r\n    },\r\n    {\r\n        label: (\r\n            <div>\r\n                hideBeforeSubmit (boolean){' '}\r\n                <Link className=\"inner-link\" to=\"/advanced/hide-before-submit\">\r\n                    See Example\r\n                </Link>\r\n            </div>\r\n        ),\r\n        desc: 'Flag to hide validation errors before setFormIsSubmitted function is called.',\r\n    },\r\n    {\r\n        label: (\r\n            <div>\r\n                showAfterBlur (boolean){' '}\r\n                <Link className=\"inner-link\" to=\"/advanced/show-after-blur\">\r\n                    See Example\r\n                </Link>\r\n            </div>\r\n        ),\r\n        desc: 'Flag to hide validation errors before setPathIsBlurred function is called for any path.',\r\n    },\r\n    {\r\n        label: (\r\n            <div>\r\n                focusToErrorAfterSubmit (boolean){' '}\r\n                <Link className=\"inner-link\" to=\"/advanced/focus-to-error-after-submit\">\r\n                    See Example\r\n                </Link>\r\n            </div>\r\n        ),\r\n        desc:\r\n            'Flag to automatically focus to first HTML element with validation error after setFormIsSubmitted function is called.',\r\n    },\r\n    {\r\n        label: (\r\n            <div>\r\n                elementFocusHandler (function){' '}\r\n                <Link className=\"inner-link\" to=\"/customizations/custom-element-focus-handler\">\r\n                    See Example\r\n                </Link>\r\n            </div>\r\n        ),\r\n        desc:\r\n            'Function that accepts the first \"elementId\" of current validation errors as parameter that is used to customly manage DOM after submit.',\r\n    },\r\n];\r\n\r\nconst returnValuesApiInfoList = [\r\n    {\r\n        label: 'isValid (boolean)',\r\n        desc:\r\n            \"First parameter of the return array of the hook. Always returns the form's combined validation result according to current formData and rules.\",\r\n    },\r\n    {\r\n        label: 'validationError (object)',\r\n        desc:\r\n            'Second parameter of the return array of the hook. Returns the validation result info of each rule with each path according to current formData and rules. Some validation results can be hide before submit or before blur.',\r\n    },\r\n    {\r\n        label: 'formData (object)',\r\n        desc: 'Third parameter of the return array of the hook. Returns current formData.',\r\n    },\r\n    {\r\n        label: 'restFunctions (object)',\r\n        desc:\r\n            'Fourth and last parameter of the return array of the hook. Returns the following functions to update validatable form at run time.',\r\n    },\r\n    {\r\n        label: (\r\n            <div>\r\n                setPathValue(path, value){' '}\r\n                <Link className=\"inner-link\" to=\"/api/path\">\r\n                    See Path API\r\n                </Link>\r\n            </div>\r\n        ),\r\n        desc: 'Function to update given path of formData with given value.',\r\n        indent: 1,\r\n    },\r\n    {\r\n        label: (\r\n            <div>\r\n                setFormIsSubmitted(){' '}\r\n                <Link className=\"inner-link\" to=\"/advanced/hide-before-submit\">\r\n                    See Example\r\n                </Link>\r\n            </div>\r\n        ),\r\n        desc:\r\n            'Function to set form is submitted info true and show all current validation results if hideBeforeSubmit parameter is set true.',\r\n        indent: 1,\r\n    },\r\n    {\r\n        label: (\r\n            <div>\r\n                setPathIsBlurred(path){' '}\r\n                <Link className=\"inner-link\" to=\"/api/path\">\r\n                    See Path API\r\n                </Link>\r\n            </div>\r\n        ),\r\n        desc:\r\n            'Function to set element of path is blurred info true and unhide its current validation result if showAfterBlur parameter is set true.',\r\n        indent: 1,\r\n    },\r\n    {\r\n        label: 'setFormData(newFormData, pathToBeRun)',\r\n        desc: 'Function to update whole formData and run validation rules of given pathToBeRun array.',\r\n        indent: 1,\r\n    },\r\n    {\r\n        label: 'setRules(newRules)',\r\n        desc: 'Function to update rules and run all validations according to these rules.',\r\n        indent: 1,\r\n    },\r\n    {\r\n        label: (\r\n            <div>\r\n                resetForm(){' '}\r\n                <Link className=\"inner-link\" to=\"/advanced/show-after-blur\">\r\n                    See Example\r\n                </Link>\r\n            </div>\r\n        ),\r\n        desc: 'Function to reset form submitted info and elements blurred info.',\r\n        indent: 1,\r\n    },\r\n    {\r\n        label: 'forceRunAllValidations()',\r\n        desc: 'Function to run all validations according to current rules.',\r\n        indent: 1,\r\n    },\r\n];\r\n\r\nconst ApiUseValidatableForm = () => {\r\n    return (\r\n        <ExampleUsageWrapper header=\"useValidatableForm\">\r\n            <CodeAccordion code={useValidatableFormCode} />\r\n            <div className=\"apiInfoSectionHeader\">Hook Parameters</div>\r\n            <ApiInfo apiInfoList={hookParametersApiInfoList} />\r\n            <div className=\"apiInfoSectionHeader\">Return Values</div>\r\n            <ApiInfo apiInfoList={returnValuesApiInfoList} />\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default ApiUseValidatableForm;\r\n","import ApiInfo from '../ApiInfo';\r\nimport CodeAccordion from '../CodeAccordion';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\n\r\nconst providerFormCode = `<ReactValidatableFormProvider\r\nlang={lang}\r\ncustomRules={customRules}\r\ntranslations={translations}\r\nhideBeforeSubmit={hideBeforeSubmit}\r\nshowAfterBlur={showAfterBlur}\r\nfocusToErrorAfterSubmit={focusToErrorAfterSubmit}\r\nelementFocusHandler={elementFocusHandler}\r\n>\r\n    <App />\r\n</ReactValidatableFormProvider>`;\r\n\r\nconst providerParametersApiInfoList = [\r\n    {\r\n        label: 'lang (string)',\r\n        desc: 'Selected language to show validation errors.',\r\n    },\r\n    {\r\n        label: 'customRules (object)',\r\n        desc: 'Custom rules that are specific to app and that can used at any component wrapped by the provider.',\r\n    },\r\n    {\r\n        label: 'translations (object)',\r\n        desc:\r\n            'Custom translation objects to override default error messages or to add a new language for error messages.',\r\n    },\r\n    {\r\n        label: 'hideBeforeSubmit (boolean)',\r\n        desc: 'Flag to hide validation errors before setFormIsSubmitted function is called.',\r\n    },\r\n    {\r\n        label: 'showAfterBlur (boolean)',\r\n        desc: 'Flag to hide validation errors before setPathIsBlurred function is called for any path.',\r\n    },\r\n    {\r\n        label: 'focusToErrorAfterSubmit (boolean)',\r\n        desc:\r\n            'Flag to automatically focus to first HTML element with validation error after setFormIsSubmitted function is called.',\r\n    },\r\n    {\r\n        label: 'elementFocusHandler (function)',\r\n        desc:\r\n            'Function that accepts the first \"elementId\" of current validation errors as parameter that is used to customly manage DOM after submit.',\r\n    },\r\n];\r\n\r\nconst ApiReactValidatableFormProvider = (props) => {\r\n    return (\r\n        <ExampleUsageWrapper header=\"ReactValidatableFormProvider\">\r\n            <CodeAccordion code={providerFormCode} />\r\n            <div className=\"apiInfoSectionHeader\">\r\n                Provider Parameters\r\n                <div>\r\n                    ruleSet (array){' '}\r\n                    <span className=\"inner-link\" onClick={props.openSettingsDialog}>\r\n                        See Example Usages\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <ApiInfo apiInfoList={providerParametersApiInfoList} />\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default ApiReactValidatableFormProvider;\r\n","import { Link } from 'react-router-dom';\r\nimport ApiInfo from '../ApiInfo';\r\nimport CodeAccordion from '../CodeAccordion';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\n\r\nconst rulesFormCode = `const rules = [\r\n    {\r\n        listPath: 'listChild',\r\n        subRules: [\r\n            {\r\n                path: 'subkey1',\r\n                ruleSet: ['required', { rule: 'length', greaterThan: 3 }],\r\n                disableFocusAfterSubmit: true,\r\n            },\r\n            {\r\n                path: 'subkey2',\r\n                ruleSet: [\r\n                    {\r\n                        rule: 'required',\r\n                        disableIf: disableSubkey2,\r\n                    },\r\n                    {\r\n                        rule: 'number',\r\n                        greaterThan: 5,\r\n                        disableIf: disableSubkey2,\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                path: 'subkey3',\r\n                ruleSet: ['required'],\r\n                elementId: 'subkey3ElementId',\r\n            },\r\n        ],\r\n        dependantPaths: ['disableAllSubkey2Rule'],\r\n    },\r\n    {\r\n        path: 'listChild',\r\n        ruleSet: [\r\n            { rule: 'required', customMessage: 'This list should not be empty' },\r\n            { rule: 'listSize', greaterThan: 2 },\r\n        ],\r\n        elementId: 'listErrorFocusElement',\r\n    },\r\n    { path: 'bottomElement1', ruleSet: ['required'] },\r\n    { path: 'bottomElement2', ruleSet: [{ rule: 'length', greaterThan: 3, applyToNulls: true }] },\r\n    { path: 'subComponentElement1', ruleSet: ['required'] },\r\n    { path: 'subComponentElement2', ruleSet: ['required'] },\r\n];`;\r\n\r\nconst rulesParametersApiInfoList = [\r\n    {\r\n        label: (\r\n            <div>\r\n                path (string){' '}\r\n                <Link className=\"inner-link\" to=\"/api/path\">\r\n                    See Path API\r\n                </Link>\r\n            </div>\r\n        ),\r\n        desc: 'Path of the value on formData to run the rule.',\r\n    },\r\n    {\r\n        label: (\r\n            <div>\r\n                listPath (string){' '}\r\n                <Link className=\"inner-link\" to=\"/api/path\">\r\n                    See Path API\r\n                </Link>\r\n            </div>\r\n        ),\r\n        desc: 'Path of the values of a list on formData to run the rules on each elements of the list.',\r\n    },\r\n    {\r\n        label: (\r\n            <div>\r\n                ruleSet (array){' '}\r\n                <Link className=\"inner-link\" to=\"/api/rule\">\r\n                    See Rule API\r\n                </Link>\r\n            </div>\r\n        ),\r\n        desc: 'Rules to be applied to the value on path (Can be string or rule object).',\r\n    },\r\n    {\r\n        label: 'elementId (string)',\r\n        desc: 'Custom elementId to focus after submit (path is used if empty).',\r\n    },\r\n    {\r\n        label: 'listElementId (string)',\r\n        desc:\r\n            'Custom listElementId prefix to focus to elements with validation errors after submit (listPath is used if empty).',\r\n    },\r\n    {\r\n        label: 'dependantPaths (array)',\r\n        desc: 'Array of paths that should trigger running the validation when there is a change on those paths.',\r\n    },\r\n    {\r\n        label: 'disableFocusAfterSubmit (boolean)',\r\n        desc: 'Disable searching for element with given path to focus after submit if there is a validation error.',\r\n    },\r\n    {\r\n        label: 'subRules (array)',\r\n        desc: 'Rules to be applied to the subpaths of the given list (can only be used with listPath).',\r\n    },\r\n];\r\n\r\nconst ApiRules = () => {\r\n    return (\r\n        <ExampleUsageWrapper header=\"rules\">\r\n            <CodeAccordion code={rulesFormCode} />\r\n            <div className=\"apiInfoSectionHeader\">Rules Array Parameters</div>\r\n            <ApiInfo apiInfoList={rulesParametersApiInfoList} />\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default ApiRules;\r\n","import { Link } from 'react-router-dom';\r\nimport ApiInfo from '../ApiInfo';\r\nimport CodeAccordion from '../CodeAccordion';\r\nimport ExampleUsageWrapper from '../ExampleUsageWrapper';\r\n\r\nconst rulesFormCode = `ruleSet: [\r\n    { rule: 'required', customMessage: 'This list should not be empty' },\r\n    { rule: 'listSize', greaterThan: 2 },\r\n],`;\r\n\r\nconst ruleParametersApiInfoList = [\r\n    {\r\n        label: 'rule (string || func)',\r\n        desc: (\r\n            <span>\r\n                Identifier (name) of the rule to be run. (Can also be a{' '}\r\n                <Link className=\"inner-link\" to=\"/rules/custom-on-hook\">\r\n                    custom function\r\n                </Link>\r\n                )\r\n            </span>\r\n        ),\r\n    },\r\n    {\r\n        label: 'equalTo, lessThan, lessThanOrEqualTo, greaterThan, greaterThanOrEqualTo, notEqualTo (any || function)',\r\n        desc: (\r\n            <span>\r\n                Comparison identifier that can be used only by{' '}\r\n                <Link className=\"inner-link\" to=\"/rules/number\">\r\n                    number\r\n                </Link>\r\n                {', '}\r\n                <Link className=\"inner-link\" to=\"/rules/length\">\r\n                    length\r\n                </Link>\r\n                {', '}\r\n                <Link className=\"inner-link\" to=\"/rules/list-size\">\r\n                    listSize\r\n                </Link>\r\n                {' and '}\r\n                <Link className=\"inner-link\" to=\"/rules/date\">\r\n                    date\r\n                </Link>{' '}\r\n                rules.\r\n            </span>\r\n        ),\r\n    },\r\n    {\r\n        label: 'onlyIntegers (boolean)',\r\n        desc: (\r\n            <span>\r\n                Decides whether only integer are allowed that can be used only by{' '}\r\n                <Link className=\"inner-link\" to=\"/rules/number\">\r\n                    number\r\n                </Link>{' '}\r\n                rule.\r\n            </span>\r\n        ),\r\n    },\r\n    {\r\n        label: (\r\n            <div>\r\n                applyToNulls (boolean){' '}\r\n                <Link className=\"inner-link\" to=\"/customizations/apply-to-nulls\">\r\n                    See Example\r\n                </Link>\r\n            </div>\r\n        ),\r\n        desc: 'Decides whether the rule should also be run on null values.',\r\n    },\r\n    {\r\n        label: (\r\n            <div>\r\n                disableIf (func){' '}\r\n                <Link className=\"inner-link\" to=\"/customizations/conditional-rules\">\r\n                    See Example\r\n                </Link>\r\n            </div>\r\n        ),\r\n        desc: 'Disables running the rule if the return value of the function is truthy.',\r\n    },\r\n    {\r\n        label: (\r\n            <div>\r\n                enableIf (func){' '}\r\n                <Link className=\"inner-link\" to=\"/customizations/conditional-rules\">\r\n                    See Example\r\n                </Link>\r\n            </div>\r\n        ),\r\n        desc: 'Enables running the rule if the return value of the function is truthy.',\r\n    },\r\n    {\r\n        label: (\r\n            <div>\r\n                customMessage (string || func){' '}\r\n                <Link className=\"inner-link\" to=\"/customizations/custom-message\">\r\n                    See Example\r\n                </Link>\r\n            </div>\r\n        ),\r\n        desc: 'Function to override default error message for the rule.',\r\n    },\r\n];\r\n\r\nconst ApiRule = () => {\r\n    return (\r\n        <ExampleUsageWrapper header=\"Rule\">\r\n            <CodeAccordion code={rulesFormCode} />\r\n            <div className=\"apiInfoSectionHeader\">Rule Definition Parameters</div>\r\n            <ApiInfo apiInfoList={ruleParametersApiInfoList} />\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default ApiRule;\r\n","import Button from '@mui/material/Button';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport './Settings.css';\r\n\r\nconst Settings = (props) => {\r\n    const { openSettingsDialog } = props;\r\n    const versionInfo = `Version: ${process.env.REACT_APP_VERSION}`;\r\n\r\n    return (\r\n        <div className={'settings-div'}>\r\n            <span className={'settingsTitle'}>\r\n                <Button variant=\"contained\" className=\"topButton\" onClick={() => openSettingsDialog()}>\r\n                    <span className=\"topButtonLabel\">Edit ReactValidatableFormProvider Props</span>\r\n                    <EditIcon />\r\n                </Button>\r\n            </span>\r\n\r\n            <span className={'versionInfo'}>\r\n                <a href={'https://www.npmjs.com/package/react-validatable-form'} target=\"_blank\" rel=\"noreferrer\">\r\n                    {versionInfo}\r\n                </a>\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;\r\n","import ExampleUsageWrapper from '../ExampleUsageWrapper';\r\n\r\nconst pathFormCode = `\r\n////////////-- example rules --///////////\r\nconst rules = [\r\n    { path: 'child1', ruleSet: ['required'] },\r\n    { path: 'child2', ruleSet: ['required'] },\r\n    { path: 'child3.subchild1', ruleSet: ['required'] },\r\n    { path: 'child3.subchild2', ruleSet: ['required'] },\r\n    {\r\n        listPath: 'listChild',\r\n        subRules: [\r\n            {path: 'subkey1', ruleSet: ['required', { rule: 'length', greaterThan: 3 }]},\r\n            {path: 'subkey2', ruleSet: [{rule: 'required', }, { rule: 'number', greaterThan: 5 }]}\r\n        ]\r\n    },\r\n    {path: 'listChild', ruleSet: [{ rule: 'required'}, { rule: 'listSize', greaterThan: 2 }]}\r\n];\r\n\r\n////////////-- example formData --///////////\r\nconst formData = {\r\n    child1: \"child1 value\",\r\n    child2: \"child2 value\",\r\n    child3: {\r\n        subchild1: \"child3 subchild1 value\",\r\n        subchild2: \"child3 subchild2 value\",\r\n    },\r\n    listChild: [\r\n        {\r\n            subkey1: \"list 0th element subkey1 value\",\r\n            subkey2: \"list 0th element subkey2 value\",\r\n        },\r\n        {\r\n            subkey1: \"list 1st element subkey1 value\",\r\n            subkey2: \"list 1st element subkey2 value\",\r\n        }\r\n    ]\r\n};\r\n\r\n////////////-- example validationError result object --///////////\r\nconst validationError = {\r\n    \"child1\": \"This field is required\",                 // first level child\r\n    \"child2\": \"This field is required\",                 // first level child\r\n    \"child3.subchild1\": \"This field is required\",       // second level child\r\n    \"child3.subchild2\": \"This field is required\",       // second level child\r\n    \"listChild\": \"This field is required\",              // first level list child\r\n    \"listChild{0}.subkey1\": \"This field is required\",   // list of object's child\r\n    \"listChild{0}.subkey2\": \"This field is required\",   // list of object's child\r\n    \"listChild{1}.subkey1\": \"This field is required\",   // list of object's child\r\n    \"listChild{1}.subkey2\": \"This field is required\",   // list of object's child\r\n}\r\n\r\n`;\r\n\r\nconst ApiPath = () => {\r\n    return (\r\n        <ExampleUsageWrapper header=\"Path\">\r\n            <div className=\"infoParagraph\">\r\n                <p>\r\n                    <b>Path</b> is a string value that is used to access any value on the formData using{' '}\r\n                    <a\r\n                        className=\"inner-link\"\r\n                        href=\"https://lodash.com/docs/4.17.15#get\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        lodash get\r\n                    </a>{' '}\r\n                    method.\r\n                </p>\r\n                <p>This table shows how to use path and listPath keys for the following code.</p>\r\n                <table className=\"pathApiTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <td className=\"pathApiTableInfoCol\">Path Type</td>\r\n                            <td className=\"pathApiTableExampleCol\">Usage Example</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Update value of first level child</td>\r\n                            <td>setPathValue({\"'child1'\"}, newValue)</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Update value of second level child</td>\r\n                            <td>setPathValue({\"'child3.subchild1'\"}, newValue)</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Update value of list&apos;s element at 0th index</td>\r\n                            <td>setPathValue({\"'listChild[0]'\"}, newValue)</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Update value of list of object&apos;s element at 0th index with key subkey1</td>\r\n                            <td>setPathValue({\"'listChild[0].subkey1'\"}, newValue)</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Get error of first level child</td>\r\n                            <td>get(validationError, {\"'child1'\"})</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Get error of second level child</td>\r\n                            <td>get(validationError, {\"'child3.subchild1'\"})</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Get error of list&apos;s element at 0th index</td>\r\n                            <td>get(validationError, {\"'listChild{0}'\"})</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Get error of list of object&apos;s element at 0th index with key subkey1</td>\r\n                            <td>get(validationError, {\"'listChild{0}.subkey1'\"})</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"pageCodeWrapper\">\r\n                <span className=\"pageCode\">{pathFormCode}</span>\r\n            </div>\r\n        </ExampleUsageWrapper>\r\n    );\r\n};\r\n\r\nexport default ApiPath;\r\n","import { HashRouter, Switch, Route } from 'react-router-dom';\r\nimport { NavSidebar } from './NavSidebar';\r\nimport ExamplePureUsage from './examples/ExamplePureUsage';\r\nimport ExampleMuiUsage from './examples/ExampleMuiUsage';\r\nimport Homepage from './Homepage';\r\nimport RuleRequired from './rules/RuleRequired';\r\nimport RuleNumber from './rules/RuleNumber';\r\nimport RuleLength from './rules/RuleLength';\r\nimport RuleListSize from './rules/RuleListSize';\r\nimport RuleDate from './rules/RuleDate';\r\nimport RuleEmail from './rules/RuleEmail';\r\nimport RuleUrl from './rules/RuleUrl';\r\nimport RuleIban from './rules/RuleIban';\r\nimport RuleCustomOnHook from './rules/RuleCustomOnHook';\r\nimport RuleCustomOnProvider from './rules/RuleCustomOnProvider';\r\nimport AdvancedHideBeforeSubmit from './advanced/AdvancedHideBeforeSubmit';\r\nimport AdvancedShowAfterBlur from './advanced/AdvancedShowAfterBlur';\r\nimport AdvancedFocusToErrorAfterSubmit from './advanced/AdvancedFocusToErrorAfterSubmit';\r\nimport CustomMessage from './customizations/CustomMessage';\r\nimport CustomTranslations from './customizations/CustomTranslations';\r\nimport AdvancedValidateComplexForms from './advanced/AdvancedValidateComplexForms';\r\nimport AdvancedValidateLists from './advanced/AdvancedValidateLists';\r\nimport CustomConditionalRules from './customizations/CustomConditionalRules';\r\nimport RuleRegex from './rules/RuleRegex';\r\nimport AdvancedFocusToErrorOnListAfterSubmit from './advanced/AdvancedFocusToErrorOnListAfterSubmit';\r\nimport AdvancedValidateListOfObjects from './advanced/AdvancedValidateListOfObjects';\r\nimport Installation from './getting-started/Installation';\r\nimport Usage from './getting-started/Usage';\r\nimport CustomApplyToNulls from './customizations/CustomApplyToNulls';\r\nimport CustomElementFocusHandler from './customizations/CustomElementFocusHandler';\r\nimport RuleUnique from './rules/RuleUnique';\r\nimport RuleEquality from './rules/RuleEquality';\r\nimport ExamplePrimeReact from './examples/ExamplePrimeReact';\r\nimport ExampleReactBootstrap from './examples/ExampleReactBootstrap';\r\nimport ApiUseValidatableForm from './api/ApiUseValidatableForm';\r\nimport ApiReactValidatableFormProvider from './api/ApiReactValidatableFormProvider';\r\nimport ApiRules from './api/ApiRules';\r\nimport ApiRule from './api/ApiRule';\r\nimport Settings from './Settings';\r\nimport ApiPath from './api/ApiPath';\r\n\r\nconst Routes = (props) => {\r\n    return (\r\n        <HashRouter>\r\n            <NavSidebar menuIsHidden={props.menuIsHidden} onMenuItemSelect={props.onMenuItemSelect} />\r\n            <div className=\"generalDiv\" onClick={props.onOutsideClick}>\r\n                <Settings openSettingsDialog={props.openSettingsDialog} />\r\n                <Switch>\r\n                    <Route exact path=\"/getting-started/installation\">\r\n                        <Installation />\r\n                    </Route>\r\n                    <Route exact path=\"/getting-started/usage\">\r\n                        <Usage />\r\n                    </Route>\r\n                    <Route exact path=\"/rules/required\">\r\n                        <RuleRequired />\r\n                    </Route>\r\n                    <Route exact path=\"/rules/number\">\r\n                        <RuleNumber />\r\n                    </Route>\r\n                    <Route exact path=\"/rules/length\">\r\n                        <RuleLength />\r\n                    </Route>\r\n                    <Route exact path=\"/rules/list-size\">\r\n                        <RuleListSize />\r\n                    </Route>\r\n                    <Route exact path=\"/rules/date\">\r\n                        <RuleDate />\r\n                    </Route>\r\n                    <Route exact path=\"/rules/email\">\r\n                        <RuleEmail />\r\n                    </Route>\r\n                    <Route exact path=\"/rules/url\">\r\n                        <RuleUrl />\r\n                    </Route>\r\n                    <Route exact path=\"/rules/iban\">\r\n                        <RuleIban />\r\n                    </Route>\r\n                    <Route exact path=\"/rules/equality\">\r\n                        <RuleEquality />\r\n                    </Route>\r\n                    <Route exact path=\"/rules/regex\">\r\n                        <RuleRegex />\r\n                    </Route>\r\n                    <Route exact path=\"/rules/unique\">\r\n                        <RuleUnique />\r\n                    </Route>\r\n                    <Route exact path=\"/rules/custom-on-hook\">\r\n                        <RuleCustomOnHook />\r\n                    </Route>\r\n                    <Route exact path=\"/rules/custom-on-provider\">\r\n                        <RuleCustomOnProvider />\r\n                    </Route>\r\n                    <Route exact path=\"/advanced/validate-lists\">\r\n                        <AdvancedValidateLists />\r\n                    </Route>\r\n                    <Route exact path=\"/advanced/hide-before-submit\">\r\n                        <AdvancedHideBeforeSubmit />\r\n                    </Route>\r\n                    <Route exact path=\"/advanced/show-after-blur\">\r\n                        <AdvancedShowAfterBlur />\r\n                    </Route>\r\n                    <Route exact path=\"/advanced/focus-to-error-after-submit\">\r\n                        <AdvancedFocusToErrorAfterSubmit />\r\n                    </Route>\r\n                    <Route exact path=\"/advanced/focus-to-error-on-list-after-submit\">\r\n                        <AdvancedFocusToErrorOnListAfterSubmit />\r\n                    </Route>\r\n                    <Route exact path=\"/advanced/validate-list-of-objects\">\r\n                        <AdvancedValidateListOfObjects />\r\n                    </Route>\r\n                    <Route exact path=\"/advanced/validate-complex-forms\">\r\n                        <AdvancedValidateComplexForms />\r\n                    </Route>\r\n                    <Route exact path=\"/customizations/custom-message\">\r\n                        <CustomMessage />\r\n                    </Route>\r\n                    <Route exact path=\"/customizations/translations\">\r\n                        <CustomTranslations />\r\n                    </Route>\r\n                    <Route exact path=\"/customizations/conditional-rules\">\r\n                        <CustomConditionalRules />\r\n                    </Route>\r\n                    <Route exact path=\"/customizations/apply-to-nulls\">\r\n                        <CustomApplyToNulls />\r\n                    </Route>\r\n                    <Route exact path=\"/customizations/custom-element-focus-handler\">\r\n                        <CustomElementFocusHandler />\r\n                    </Route>\r\n                    <Route exact path=\"/examples/pure\">\r\n                        <ExamplePureUsage />\r\n                    </Route>\r\n                    <Route exact path=\"/examples/mui\">\r\n                        <ExampleMuiUsage />\r\n                    </Route>\r\n                    <Route exact path=\"/examples/prime-react\">\r\n                        <ExamplePrimeReact />\r\n                    </Route>\r\n                    <Route exact path=\"/examples/react-bootstrap\">\r\n                        <ExampleReactBootstrap />\r\n                    </Route>\r\n                    <Route exact path=\"/api/react-validatable-form-provider\">\r\n                        <ApiReactValidatableFormProvider openSettingsDialog={props.openSettingsDialog} />\r\n                    </Route>\r\n                    <Route exact path=\"/api/use-validatable-form\">\r\n                        <ApiUseValidatableForm />\r\n                    </Route>\r\n                    <Route exact path=\"/api/rules\">\r\n                        <ApiRules />\r\n                    </Route>\r\n                    <Route exact path=\"/api/rule\">\r\n                        <ApiRule />\r\n                    </Route>\r\n                    <Route exact path=\"/api/path\">\r\n                        <ApiPath />\r\n                    </Route>\r\n                    <Route exact path=\"/\">\r\n                        <Homepage />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </HashRouter>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n","import { useState } from 'react';\r\nimport { ReactValidatableFormProvider } from 'react-validatable-form';\r\nimport { Dialog, DialogTitle } from '@mui/material';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport './Main.css';\r\nimport BodyWrapper from './BodyWrapper';\r\nimport Routes from './Routes';\r\nimport ExampleUsageWrapper from './ExampleUsageWrapper';\r\n\r\nconst MyCustomRuleFunction = (ruleParams) => {\r\n    const { value } = ruleParams;\r\n\r\n    if (!value) {\r\n        return 'this field include is a required field';\r\n    }\r\n\r\n    if (!value.includes('a') && value.length < 5) {\r\n        return `text ${value} should either include letter 'a' or its length should be greater than 4`;\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nconst customRules = {\r\n    myCustomRule: MyCustomRuleFunction,\r\n};\r\n\r\nconst defaultSettings = {\r\n    lang: 'en',\r\n    translationsEnabled: false,\r\n    hideBeforeSubmit: false,\r\n    showAfterBlur: false,\r\n    focusToErrorAfterSubmit: false,\r\n    customElementFocusHandlerEnabled: false,\r\n};\r\n\r\nconst customTranslations = {\r\n    en: {\r\n        required: 'This field is really required',\r\n        'length.greaterThan': 'Believe me, this field should really have greater than ${comparisonValue} characters',\r\n        'length.equalTo': 'You should be careful because this field should have ${comparisonValue} characters',\r\n    },\r\n    de: {\r\n        required: 'Dieses Feld wird benötigt',\r\n    },\r\n};\r\n\r\nconst defaultLangOptions = ['en', 'tr'];\r\n\r\nconst Main = () => {\r\n    const isMobile = useMediaQuery('(max-width:1024px)');\r\n    const [currentSettings, setCurrentSettings] = useState(defaultSettings);\r\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\r\n    const [menuIsHidden, setMenuIsHidden] = useState(false);\r\n\r\n    const handleOutsideClick = () => {\r\n        if (isMobile) {\r\n            setMenuIsHidden(true);\r\n        }\r\n    };\r\n\r\n    const handleOnMenuItemSelect = () => {\r\n        if (isMobile) {\r\n            setMenuIsHidden(true);\r\n        }\r\n    };\r\n\r\n    const openSettingsDialog = () => {\r\n        setSettingsDialogOpen(true);\r\n    };\r\n\r\n    const handleSettingChange = (key, value) => {\r\n        const newSettings = { ...currentSettings };\r\n        newSettings[key] = value;\r\n        if (key === 'translationsEnabled' && !value) {\r\n            if (currentSettings.lang === 'de') {\r\n                newSettings['lang'] = 'en';\r\n            }\r\n        }\r\n        setCurrentSettings(newSettings);\r\n    };\r\n\r\n    let translations = null;\r\n    if (currentSettings.translationsEnabled) {\r\n        translations = customTranslations;\r\n    }\r\n\r\n    const currentLangOptions = [...defaultLangOptions];\r\n    if (currentSettings.translationsEnabled) {\r\n        currentLangOptions.push('de');\r\n    }\r\n\r\n    let customElementFocusHandler = null;\r\n    if (currentSettings.customElementFocusHandlerEnabled) {\r\n        customElementFocusHandler = (elementId) => {\r\n            const element = document.getElementById(elementId);\r\n            if (!element) {\r\n                console.warn(`useValidatableForm warning. Dom element with id ${elementId} is not found to be focused`);\r\n            } else {\r\n                console.log(`I'm currently focusing Dom element with id ${elementId}`);\r\n                element.focus();\r\n            }\r\n        };\r\n    }\r\n\r\n    const dialogContent = (\r\n        <div className={'providerDialogContent'}>\r\n            <Autocomplete\r\n                value={currentSettings.lang}\r\n                onChange={(event, newValue) => {\r\n                    handleSettingChange('lang', newValue);\r\n                }}\r\n                options={currentLangOptions}\r\n                renderInput={(params) => <TextField {...params} label=\"lang\" />}\r\n                style={{ width: 200 }}\r\n            />\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox\r\n                        checked={currentSettings.translationsEnabled}\r\n                        onChange={(e) => handleSettingChange('translationsEnabled', e.target.checked)}\r\n                    />\r\n                }\r\n                label=\"custom translations\"\r\n            />\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox\r\n                        checked={currentSettings.hideBeforeSubmit}\r\n                        onChange={(e) => handleSettingChange('hideBeforeSubmit', e.target.checked)}\r\n                    />\r\n                }\r\n                label=\"hideBeforeSubmit\"\r\n            />\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox\r\n                        checked={currentSettings.showAfterBlur}\r\n                        onChange={(e) => handleSettingChange('showAfterBlur', e.target.checked)}\r\n                    />\r\n                }\r\n                label=\"showAfterBlur\"\r\n            />\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox\r\n                        checked={currentSettings.focusToErrorAfterSubmit}\r\n                        onChange={(e) => handleSettingChange('focusToErrorAfterSubmit', e.target.checked)}\r\n                    />\r\n                }\r\n                label=\"focusToErrorAfterSubmit\"\r\n            />\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox\r\n                        checked={currentSettings.customElementFocusHandlerEnabled}\r\n                        onChange={(e) => handleSettingChange('customElementFocusHandlerEnabled', e.target.checked)}\r\n                    />\r\n                }\r\n                label=\"custom elementFocusHandler\"\r\n            />\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <div className=\"headerDiv\"></div>\r\n            <IconButton onClick={() => setMenuIsHidden(!menuIsHidden)} className=\"menuButton\">\r\n                <MenuIcon />\r\n            </IconButton>\r\n            <Dialog open={settingsDialogOpen} onClose={() => setSettingsDialogOpen(false)}>\r\n                <DialogTitle>\r\n                    <ExampleUsageWrapper\r\n                        header=\"Edit ReactValidatableFormProvider Props\"\r\n                        codeUrl=\"components/Main.js\"\r\n                        wrapperClassName=\"modalHeaderWrapper\"\r\n                    />\r\n                </DialogTitle>\r\n                {dialogContent}\r\n            </Dialog>\r\n            <ReactValidatableFormProvider\r\n                lang={currentSettings.lang}\r\n                customRules={customRules}\r\n                translations={translations}\r\n                hideBeforeSubmit={currentSettings.hideBeforeSubmit}\r\n                showAfterBlur={currentSettings.showAfterBlur}\r\n                focusToErrorAfterSubmit={currentSettings.focusToErrorAfterSubmit}\r\n                elementFocusHandler={customElementFocusHandler}\r\n            >\r\n                <BodyWrapper>\r\n                    <div className=\"flex h-screen\">\r\n                        <Routes\r\n                            onMenuItemSelect={handleOnMenuItemSelect}\r\n                            openSettingsDialog={openSettingsDialog}\r\n                            menuIsHidden={menuIsHidden}\r\n                            onOutsideClick={handleOutsideClick}\r\n                        />\r\n                    </div>\r\n                </BodyWrapper>\r\n            </ReactValidatableFormProvider>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import './App.css';\r\nimport Main from './components/Main';\r\n\r\nfunction App() {\r\n    return <Main />;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './styles/sidenavigation.css';\r\nimport App from './App';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primereact/resources/themes/saga-blue/theme.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n            <App />\r\n        </LocalizationProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}